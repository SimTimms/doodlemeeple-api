module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateContract {
  count: Int!
}

type AggregateConversation {
  count: Int!
}

type AggregateCount {
  count: Int!
}

type AggregateGallery {
  count: Int!
}

type AggregateGalleryImage {
  count: Int!
}

type AggregateGame {
  count: Int!
}

type AggregateInvite {
  count: Int!
}

type AggregateJob {
  count: Int!
}

type AggregateMessage {
  count: Int!
}

type AggregateNotableProjects {
  count: Int!
}

type AggregateNotification {
  count: Int!
}

type AggregatePaymentTerm {
  count: Int!
}

type AggregateSection {
  count: Int!
}

type AggregateTestimonial {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Contract {
  id: ID!
  notes: String
  deadline: String
  cost: Int
  paymentTerms(where: PaymentTermWhereInput, orderBy: PaymentTermOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PaymentTerm!]
  currency: String!
  invite: Invite!
}

type ContractConnection {
  pageInfo: PageInfo!
  edges: [ContractEdge]!
  aggregate: AggregateContract!
}

input ContractCreateInput {
  id: ID
  notes: String
  deadline: String
  cost: Int
  paymentTerms: PaymentTermCreateManyInput
  currency: String!
  invite: InviteCreateOneWithoutContractsInput!
}

input ContractCreateManyWithoutInviteInput {
  create: [ContractCreateWithoutInviteInput!]
  connect: [ContractWhereUniqueInput!]
}

input ContractCreateWithoutInviteInput {
  id: ID
  notes: String
  deadline: String
  cost: Int
  paymentTerms: PaymentTermCreateManyInput
  currency: String!
}

type ContractEdge {
  node: Contract!
  cursor: String!
}

enum ContractOrderByInput {
  id_ASC
  id_DESC
  notes_ASC
  notes_DESC
  deadline_ASC
  deadline_DESC
  cost_ASC
  cost_DESC
  currency_ASC
  currency_DESC
}

type ContractPreviousValues {
  id: ID!
  notes: String
  deadline: String
  cost: Int
  currency: String!
}

input ContractScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  deadline: String
  deadline_not: String
  deadline_in: [String!]
  deadline_not_in: [String!]
  deadline_lt: String
  deadline_lte: String
  deadline_gt: String
  deadline_gte: String
  deadline_contains: String
  deadline_not_contains: String
  deadline_starts_with: String
  deadline_not_starts_with: String
  deadline_ends_with: String
  deadline_not_ends_with: String
  cost: Int
  cost_not: Int
  cost_in: [Int!]
  cost_not_in: [Int!]
  cost_lt: Int
  cost_lte: Int
  cost_gt: Int
  cost_gte: Int
  currency: String
  currency_not: String
  currency_in: [String!]
  currency_not_in: [String!]
  currency_lt: String
  currency_lte: String
  currency_gt: String
  currency_gte: String
  currency_contains: String
  currency_not_contains: String
  currency_starts_with: String
  currency_not_starts_with: String
  currency_ends_with: String
  currency_not_ends_with: String
  AND: [ContractScalarWhereInput!]
  OR: [ContractScalarWhereInput!]
  NOT: [ContractScalarWhereInput!]
}

type ContractSubscriptionPayload {
  mutation: MutationType!
  node: Contract
  updatedFields: [String!]
  previousValues: ContractPreviousValues
}

input ContractSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ContractWhereInput
  AND: [ContractSubscriptionWhereInput!]
  OR: [ContractSubscriptionWhereInput!]
  NOT: [ContractSubscriptionWhereInput!]
}

input ContractUpdateInput {
  notes: String
  deadline: String
  cost: Int
  paymentTerms: PaymentTermUpdateManyInput
  currency: String
  invite: InviteUpdateOneRequiredWithoutContractsInput
}

input ContractUpdateManyDataInput {
  notes: String
  deadline: String
  cost: Int
  currency: String
}

input ContractUpdateManyMutationInput {
  notes: String
  deadline: String
  cost: Int
  currency: String
}

input ContractUpdateManyWithoutInviteInput {
  create: [ContractCreateWithoutInviteInput!]
  delete: [ContractWhereUniqueInput!]
  connect: [ContractWhereUniqueInput!]
  set: [ContractWhereUniqueInput!]
  disconnect: [ContractWhereUniqueInput!]
  update: [ContractUpdateWithWhereUniqueWithoutInviteInput!]
  upsert: [ContractUpsertWithWhereUniqueWithoutInviteInput!]
  deleteMany: [ContractScalarWhereInput!]
  updateMany: [ContractUpdateManyWithWhereNestedInput!]
}

input ContractUpdateManyWithWhereNestedInput {
  where: ContractScalarWhereInput!
  data: ContractUpdateManyDataInput!
}

input ContractUpdateWithoutInviteDataInput {
  notes: String
  deadline: String
  cost: Int
  paymentTerms: PaymentTermUpdateManyInput
  currency: String
}

input ContractUpdateWithWhereUniqueWithoutInviteInput {
  where: ContractWhereUniqueInput!
  data: ContractUpdateWithoutInviteDataInput!
}

input ContractUpsertWithWhereUniqueWithoutInviteInput {
  where: ContractWhereUniqueInput!
  update: ContractUpdateWithoutInviteDataInput!
  create: ContractCreateWithoutInviteInput!
}

input ContractWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  notes: String
  notes_not: String
  notes_in: [String!]
  notes_not_in: [String!]
  notes_lt: String
  notes_lte: String
  notes_gt: String
  notes_gte: String
  notes_contains: String
  notes_not_contains: String
  notes_starts_with: String
  notes_not_starts_with: String
  notes_ends_with: String
  notes_not_ends_with: String
  deadline: String
  deadline_not: String
  deadline_in: [String!]
  deadline_not_in: [String!]
  deadline_lt: String
  deadline_lte: String
  deadline_gt: String
  deadline_gte: String
  deadline_contains: String
  deadline_not_contains: String
  deadline_starts_with: String
  deadline_not_starts_with: String
  deadline_ends_with: String
  deadline_not_ends_with: String
  cost: Int
  cost_not: Int
  cost_in: [Int!]
  cost_not_in: [Int!]
  cost_lt: Int
  cost_lte: Int
  cost_gt: Int
  cost_gte: Int
  paymentTerms_every: PaymentTermWhereInput
  paymentTerms_some: PaymentTermWhereInput
  paymentTerms_none: PaymentTermWhereInput
  currency: String
  currency_not: String
  currency_in: [String!]
  currency_not_in: [String!]
  currency_lt: String
  currency_lte: String
  currency_gt: String
  currency_gte: String
  currency_contains: String
  currency_not_contains: String
  currency_starts_with: String
  currency_not_starts_with: String
  currency_ends_with: String
  currency_not_ends_with: String
  invite: InviteWhereInput
  AND: [ContractWhereInput!]
  OR: [ContractWhereInput!]
  NOT: [ContractWhereInput!]
}

input ContractWhereUniqueInput {
  id: ID
}

type Conversation {
  id: ID!
  messages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message!]
  unreadMessages: String
  participants(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  job: Job
  createdAt: DateTime!
}

type ConversationConnection {
  pageInfo: PageInfo!
  edges: [ConversationEdge]!
  aggregate: AggregateConversation!
}

input ConversationCreateInput {
  id: ID
  messages: MessageCreateManyWithoutConversationInput
  unreadMessages: String
  participants: UserCreateManyWithoutConversationsInput
  job: JobCreateOneWithoutConversationsInput
}

input ConversationCreateManyWithoutJobInput {
  create: [ConversationCreateWithoutJobInput!]
  connect: [ConversationWhereUniqueInput!]
}

input ConversationCreateManyWithoutParticipantsInput {
  create: [ConversationCreateWithoutParticipantsInput!]
  connect: [ConversationWhereUniqueInput!]
}

input ConversationCreateOneWithoutMessagesInput {
  create: ConversationCreateWithoutMessagesInput
  connect: ConversationWhereUniqueInput
}

input ConversationCreateWithoutJobInput {
  id: ID
  messages: MessageCreateManyWithoutConversationInput
  unreadMessages: String
  participants: UserCreateManyWithoutConversationsInput
}

input ConversationCreateWithoutMessagesInput {
  id: ID
  unreadMessages: String
  participants: UserCreateManyWithoutConversationsInput
  job: JobCreateOneWithoutConversationsInput
}

input ConversationCreateWithoutParticipantsInput {
  id: ID
  messages: MessageCreateManyWithoutConversationInput
  unreadMessages: String
  job: JobCreateOneWithoutConversationsInput
}

type ConversationEdge {
  node: Conversation!
  cursor: String!
}

enum ConversationOrderByInput {
  id_ASC
  id_DESC
  unreadMessages_ASC
  unreadMessages_DESC
  createdAt_ASC
  createdAt_DESC
}

type ConversationPreviousValues {
  id: ID!
  unreadMessages: String
  createdAt: DateTime!
}

input ConversationScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  unreadMessages: String
  unreadMessages_not: String
  unreadMessages_in: [String!]
  unreadMessages_not_in: [String!]
  unreadMessages_lt: String
  unreadMessages_lte: String
  unreadMessages_gt: String
  unreadMessages_gte: String
  unreadMessages_contains: String
  unreadMessages_not_contains: String
  unreadMessages_starts_with: String
  unreadMessages_not_starts_with: String
  unreadMessages_ends_with: String
  unreadMessages_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [ConversationScalarWhereInput!]
  OR: [ConversationScalarWhereInput!]
  NOT: [ConversationScalarWhereInput!]
}

type ConversationSubscriptionPayload {
  mutation: MutationType!
  node: Conversation
  updatedFields: [String!]
  previousValues: ConversationPreviousValues
}

input ConversationSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ConversationWhereInput
  AND: [ConversationSubscriptionWhereInput!]
  OR: [ConversationSubscriptionWhereInput!]
  NOT: [ConversationSubscriptionWhereInput!]
}

input ConversationUpdateInput {
  messages: MessageUpdateManyWithoutConversationInput
  unreadMessages: String
  participants: UserUpdateManyWithoutConversationsInput
  job: JobUpdateOneWithoutConversationsInput
}

input ConversationUpdateManyDataInput {
  unreadMessages: String
}

input ConversationUpdateManyMutationInput {
  unreadMessages: String
}

input ConversationUpdateManyWithoutJobInput {
  create: [ConversationCreateWithoutJobInput!]
  delete: [ConversationWhereUniqueInput!]
  connect: [ConversationWhereUniqueInput!]
  set: [ConversationWhereUniqueInput!]
  disconnect: [ConversationWhereUniqueInput!]
  update: [ConversationUpdateWithWhereUniqueWithoutJobInput!]
  upsert: [ConversationUpsertWithWhereUniqueWithoutJobInput!]
  deleteMany: [ConversationScalarWhereInput!]
  updateMany: [ConversationUpdateManyWithWhereNestedInput!]
}

input ConversationUpdateManyWithoutParticipantsInput {
  create: [ConversationCreateWithoutParticipantsInput!]
  delete: [ConversationWhereUniqueInput!]
  connect: [ConversationWhereUniqueInput!]
  set: [ConversationWhereUniqueInput!]
  disconnect: [ConversationWhereUniqueInput!]
  update: [ConversationUpdateWithWhereUniqueWithoutParticipantsInput!]
  upsert: [ConversationUpsertWithWhereUniqueWithoutParticipantsInput!]
  deleteMany: [ConversationScalarWhereInput!]
  updateMany: [ConversationUpdateManyWithWhereNestedInput!]
}

input ConversationUpdateManyWithWhereNestedInput {
  where: ConversationScalarWhereInput!
  data: ConversationUpdateManyDataInput!
}

input ConversationUpdateOneWithoutMessagesInput {
  create: ConversationCreateWithoutMessagesInput
  update: ConversationUpdateWithoutMessagesDataInput
  upsert: ConversationUpsertWithoutMessagesInput
  delete: Boolean
  disconnect: Boolean
  connect: ConversationWhereUniqueInput
}

input ConversationUpdateWithoutJobDataInput {
  messages: MessageUpdateManyWithoutConversationInput
  unreadMessages: String
  participants: UserUpdateManyWithoutConversationsInput
}

input ConversationUpdateWithoutMessagesDataInput {
  unreadMessages: String
  participants: UserUpdateManyWithoutConversationsInput
  job: JobUpdateOneWithoutConversationsInput
}

input ConversationUpdateWithoutParticipantsDataInput {
  messages: MessageUpdateManyWithoutConversationInput
  unreadMessages: String
  job: JobUpdateOneWithoutConversationsInput
}

input ConversationUpdateWithWhereUniqueWithoutJobInput {
  where: ConversationWhereUniqueInput!
  data: ConversationUpdateWithoutJobDataInput!
}

input ConversationUpdateWithWhereUniqueWithoutParticipantsInput {
  where: ConversationWhereUniqueInput!
  data: ConversationUpdateWithoutParticipantsDataInput!
}

input ConversationUpsertWithoutMessagesInput {
  update: ConversationUpdateWithoutMessagesDataInput!
  create: ConversationCreateWithoutMessagesInput!
}

input ConversationUpsertWithWhereUniqueWithoutJobInput {
  where: ConversationWhereUniqueInput!
  update: ConversationUpdateWithoutJobDataInput!
  create: ConversationCreateWithoutJobInput!
}

input ConversationUpsertWithWhereUniqueWithoutParticipantsInput {
  where: ConversationWhereUniqueInput!
  update: ConversationUpdateWithoutParticipantsDataInput!
  create: ConversationCreateWithoutParticipantsInput!
}

input ConversationWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  messages_every: MessageWhereInput
  messages_some: MessageWhereInput
  messages_none: MessageWhereInput
  unreadMessages: String
  unreadMessages_not: String
  unreadMessages_in: [String!]
  unreadMessages_not_in: [String!]
  unreadMessages_lt: String
  unreadMessages_lte: String
  unreadMessages_gt: String
  unreadMessages_gte: String
  unreadMessages_contains: String
  unreadMessages_not_contains: String
  unreadMessages_starts_with: String
  unreadMessages_not_starts_with: String
  unreadMessages_ends_with: String
  unreadMessages_not_ends_with: String
  participants_every: UserWhereInput
  participants_some: UserWhereInput
  participants_none: UserWhereInput
  job: JobWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [ConversationWhereInput!]
  OR: [ConversationWhereInput!]
  NOT: [ConversationWhereInput!]
}

input ConversationWhereUniqueInput {
  id: ID
}

type Count {
  id: ID!
  invites: String
  messages: String
}

type CountConnection {
  pageInfo: PageInfo!
  edges: [CountEdge]!
  aggregate: AggregateCount!
}

input CountCreateInput {
  id: ID
  invites: String
  messages: String
}

type CountEdge {
  node: Count!
  cursor: String!
}

enum CountOrderByInput {
  id_ASC
  id_DESC
  invites_ASC
  invites_DESC
  messages_ASC
  messages_DESC
}

type CountPreviousValues {
  id: ID!
  invites: String
  messages: String
}

type CountSubscriptionPayload {
  mutation: MutationType!
  node: Count
  updatedFields: [String!]
  previousValues: CountPreviousValues
}

input CountSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CountWhereInput
  AND: [CountSubscriptionWhereInput!]
  OR: [CountSubscriptionWhereInput!]
  NOT: [CountSubscriptionWhereInput!]
}

input CountUpdateInput {
  invites: String
  messages: String
}

input CountUpdateManyMutationInput {
  invites: String
  messages: String
}

input CountWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  invites: String
  invites_not: String
  invites_in: [String!]
  invites_not_in: [String!]
  invites_lt: String
  invites_lte: String
  invites_gt: String
  invites_gte: String
  invites_contains: String
  invites_not_contains: String
  invites_starts_with: String
  invites_not_starts_with: String
  invites_ends_with: String
  invites_not_ends_with: String
  messages: String
  messages_not: String
  messages_in: [String!]
  messages_not_in: [String!]
  messages_lt: String
  messages_lte: String
  messages_gt: String
  messages_gte: String
  messages_contains: String
  messages_not_contains: String
  messages_starts_with: String
  messages_not_starts_with: String
  messages_ends_with: String
  messages_not_ends_with: String
  AND: [CountWhereInput!]
  OR: [CountWhereInput!]
  NOT: [CountWhereInput!]
}

input CountWhereUniqueInput {
  id: ID
}

scalar DateTime

type Gallery {
  id: ID!
  summary: String
  section: Section
  images(where: GalleryImageWhereInput, orderBy: GalleryImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GalleryImage!]
}

type GalleryConnection {
  pageInfo: PageInfo!
  edges: [GalleryEdge]!
  aggregate: AggregateGallery!
}

input GalleryCreateInput {
  id: ID
  summary: String
  section: SectionCreateOneWithoutGalleryInput
  images: GalleryImageCreateManyWithoutGalleryInput
}

input GalleryCreateOneInput {
  create: GalleryCreateInput
  connect: GalleryWhereUniqueInput
}

input GalleryCreateOneWithoutImagesInput {
  create: GalleryCreateWithoutImagesInput
  connect: GalleryWhereUniqueInput
}

input GalleryCreateOneWithoutSectionInput {
  create: GalleryCreateWithoutSectionInput
  connect: GalleryWhereUniqueInput
}

input GalleryCreateWithoutImagesInput {
  id: ID
  summary: String
  section: SectionCreateOneWithoutGalleryInput
}

input GalleryCreateWithoutSectionInput {
  id: ID
  summary: String
  images: GalleryImageCreateManyWithoutGalleryInput
}

type GalleryEdge {
  node: Gallery!
  cursor: String!
}

type GalleryImage {
  id: ID!
  img: String!
  title: String
  gallery: Gallery
}

type GalleryImageConnection {
  pageInfo: PageInfo!
  edges: [GalleryImageEdge]!
  aggregate: AggregateGalleryImage!
}

input GalleryImageCreateInput {
  id: ID
  img: String!
  title: String
  gallery: GalleryCreateOneWithoutImagesInput
}

input GalleryImageCreateManyWithoutGalleryInput {
  create: [GalleryImageCreateWithoutGalleryInput!]
  connect: [GalleryImageWhereUniqueInput!]
}

input GalleryImageCreateWithoutGalleryInput {
  id: ID
  img: String!
  title: String
}

type GalleryImageEdge {
  node: GalleryImage!
  cursor: String!
}

enum GalleryImageOrderByInput {
  id_ASC
  id_DESC
  img_ASC
  img_DESC
  title_ASC
  title_DESC
}

type GalleryImagePreviousValues {
  id: ID!
  img: String!
  title: String
}

input GalleryImageScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  img: String
  img_not: String
  img_in: [String!]
  img_not_in: [String!]
  img_lt: String
  img_lte: String
  img_gt: String
  img_gte: String
  img_contains: String
  img_not_contains: String
  img_starts_with: String
  img_not_starts_with: String
  img_ends_with: String
  img_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  AND: [GalleryImageScalarWhereInput!]
  OR: [GalleryImageScalarWhereInput!]
  NOT: [GalleryImageScalarWhereInput!]
}

type GalleryImageSubscriptionPayload {
  mutation: MutationType!
  node: GalleryImage
  updatedFields: [String!]
  previousValues: GalleryImagePreviousValues
}

input GalleryImageSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: GalleryImageWhereInput
  AND: [GalleryImageSubscriptionWhereInput!]
  OR: [GalleryImageSubscriptionWhereInput!]
  NOT: [GalleryImageSubscriptionWhereInput!]
}

input GalleryImageUpdateInput {
  img: String
  title: String
  gallery: GalleryUpdateOneWithoutImagesInput
}

input GalleryImageUpdateManyDataInput {
  img: String
  title: String
}

input GalleryImageUpdateManyMutationInput {
  img: String
  title: String
}

input GalleryImageUpdateManyWithoutGalleryInput {
  create: [GalleryImageCreateWithoutGalleryInput!]
  delete: [GalleryImageWhereUniqueInput!]
  connect: [GalleryImageWhereUniqueInput!]
  set: [GalleryImageWhereUniqueInput!]
  disconnect: [GalleryImageWhereUniqueInput!]
  update: [GalleryImageUpdateWithWhereUniqueWithoutGalleryInput!]
  upsert: [GalleryImageUpsertWithWhereUniqueWithoutGalleryInput!]
  deleteMany: [GalleryImageScalarWhereInput!]
  updateMany: [GalleryImageUpdateManyWithWhereNestedInput!]
}

input GalleryImageUpdateManyWithWhereNestedInput {
  where: GalleryImageScalarWhereInput!
  data: GalleryImageUpdateManyDataInput!
}

input GalleryImageUpdateWithoutGalleryDataInput {
  img: String
  title: String
}

input GalleryImageUpdateWithWhereUniqueWithoutGalleryInput {
  where: GalleryImageWhereUniqueInput!
  data: GalleryImageUpdateWithoutGalleryDataInput!
}

input GalleryImageUpsertWithWhereUniqueWithoutGalleryInput {
  where: GalleryImageWhereUniqueInput!
  update: GalleryImageUpdateWithoutGalleryDataInput!
  create: GalleryImageCreateWithoutGalleryInput!
}

input GalleryImageWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  img: String
  img_not: String
  img_in: [String!]
  img_not_in: [String!]
  img_lt: String
  img_lte: String
  img_gt: String
  img_gte: String
  img_contains: String
  img_not_contains: String
  img_starts_with: String
  img_not_starts_with: String
  img_ends_with: String
  img_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  gallery: GalleryWhereInput
  AND: [GalleryImageWhereInput!]
  OR: [GalleryImageWhereInput!]
  NOT: [GalleryImageWhereInput!]
}

input GalleryImageWhereUniqueInput {
  id: ID
}

enum GalleryOrderByInput {
  id_ASC
  id_DESC
  summary_ASC
  summary_DESC
}

type GalleryPreviousValues {
  id: ID!
  summary: String
}

type GallerySubscriptionPayload {
  mutation: MutationType!
  node: Gallery
  updatedFields: [String!]
  previousValues: GalleryPreviousValues
}

input GallerySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: GalleryWhereInput
  AND: [GallerySubscriptionWhereInput!]
  OR: [GallerySubscriptionWhereInput!]
  NOT: [GallerySubscriptionWhereInput!]
}

input GalleryUpdateDataInput {
  summary: String
  section: SectionUpdateOneWithoutGalleryInput
  images: GalleryImageUpdateManyWithoutGalleryInput
}

input GalleryUpdateInput {
  summary: String
  section: SectionUpdateOneWithoutGalleryInput
  images: GalleryImageUpdateManyWithoutGalleryInput
}

input GalleryUpdateManyMutationInput {
  summary: String
}

input GalleryUpdateOneInput {
  create: GalleryCreateInput
  update: GalleryUpdateDataInput
  upsert: GalleryUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: GalleryWhereUniqueInput
}

input GalleryUpdateOneWithoutImagesInput {
  create: GalleryCreateWithoutImagesInput
  update: GalleryUpdateWithoutImagesDataInput
  upsert: GalleryUpsertWithoutImagesInput
  delete: Boolean
  disconnect: Boolean
  connect: GalleryWhereUniqueInput
}

input GalleryUpdateOneWithoutSectionInput {
  create: GalleryCreateWithoutSectionInput
  update: GalleryUpdateWithoutSectionDataInput
  upsert: GalleryUpsertWithoutSectionInput
  delete: Boolean
  disconnect: Boolean
  connect: GalleryWhereUniqueInput
}

input GalleryUpdateWithoutImagesDataInput {
  summary: String
  section: SectionUpdateOneWithoutGalleryInput
}

input GalleryUpdateWithoutSectionDataInput {
  summary: String
  images: GalleryImageUpdateManyWithoutGalleryInput
}

input GalleryUpsertNestedInput {
  update: GalleryUpdateDataInput!
  create: GalleryCreateInput!
}

input GalleryUpsertWithoutImagesInput {
  update: GalleryUpdateWithoutImagesDataInput!
  create: GalleryCreateWithoutImagesInput!
}

input GalleryUpsertWithoutSectionInput {
  update: GalleryUpdateWithoutSectionDataInput!
  create: GalleryCreateWithoutSectionInput!
}

input GalleryWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  section: SectionWhereInput
  images_every: GalleryImageWhereInput
  images_some: GalleryImageWhereInput
  images_none: GalleryImageWhereInput
  AND: [GalleryWhereInput!]
  OR: [GalleryWhereInput!]
  NOT: [GalleryWhereInput!]
}

input GalleryWhereUniqueInput {
  id: ID
}

type Game {
  id: ID!
  name: String!
  keywords: [String!]!
  img: String
  backgroundImg: String
  summary: String
  location: String
  gallery: Gallery
  showreel: String
  user: User!
  type: String
  createdAt: DateTime!
  jobs(where: JobWhereInput, orderBy: JobOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Job!]
}

type GameConnection {
  pageInfo: PageInfo!
  edges: [GameEdge]!
  aggregate: AggregateGame!
}

input GameCreateInput {
  id: ID
  name: String!
  keywords: GameCreatekeywordsInput
  img: String
  backgroundImg: String
  summary: String
  location: String
  gallery: GalleryCreateOneInput
  showreel: String
  user: UserCreateOneWithoutGamesInput!
  type: String
  jobs: JobCreateManyWithoutGameInput
}

input GameCreatekeywordsInput {
  set: [String!]
}

input GameCreateManyWithoutUserInput {
  create: [GameCreateWithoutUserInput!]
  connect: [GameWhereUniqueInput!]
}

input GameCreateOneInput {
  create: GameCreateInput
  connect: GameWhereUniqueInput
}

input GameCreateOneWithoutJobsInput {
  create: GameCreateWithoutJobsInput
  connect: GameWhereUniqueInput
}

input GameCreateWithoutJobsInput {
  id: ID
  name: String!
  keywords: GameCreatekeywordsInput
  img: String
  backgroundImg: String
  summary: String
  location: String
  gallery: GalleryCreateOneInput
  showreel: String
  user: UserCreateOneWithoutGamesInput!
  type: String
}

input GameCreateWithoutUserInput {
  id: ID
  name: String!
  keywords: GameCreatekeywordsInput
  img: String
  backgroundImg: String
  summary: String
  location: String
  gallery: GalleryCreateOneInput
  showreel: String
  type: String
  jobs: JobCreateManyWithoutGameInput
}

type GameEdge {
  node: Game!
  cursor: String!
}

enum GameOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  img_ASC
  img_DESC
  backgroundImg_ASC
  backgroundImg_DESC
  summary_ASC
  summary_DESC
  location_ASC
  location_DESC
  showreel_ASC
  showreel_DESC
  type_ASC
  type_DESC
  createdAt_ASC
  createdAt_DESC
}

type GamePreviousValues {
  id: ID!
  name: String!
  keywords: [String!]!
  img: String
  backgroundImg: String
  summary: String
  location: String
  showreel: String
  type: String
  createdAt: DateTime!
}

input GameScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  img: String
  img_not: String
  img_in: [String!]
  img_not_in: [String!]
  img_lt: String
  img_lte: String
  img_gt: String
  img_gte: String
  img_contains: String
  img_not_contains: String
  img_starts_with: String
  img_not_starts_with: String
  img_ends_with: String
  img_not_ends_with: String
  backgroundImg: String
  backgroundImg_not: String
  backgroundImg_in: [String!]
  backgroundImg_not_in: [String!]
  backgroundImg_lt: String
  backgroundImg_lte: String
  backgroundImg_gt: String
  backgroundImg_gte: String
  backgroundImg_contains: String
  backgroundImg_not_contains: String
  backgroundImg_starts_with: String
  backgroundImg_not_starts_with: String
  backgroundImg_ends_with: String
  backgroundImg_not_ends_with: String
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  showreel: String
  showreel_not: String
  showreel_in: [String!]
  showreel_not_in: [String!]
  showreel_lt: String
  showreel_lte: String
  showreel_gt: String
  showreel_gte: String
  showreel_contains: String
  showreel_not_contains: String
  showreel_starts_with: String
  showreel_not_starts_with: String
  showreel_ends_with: String
  showreel_not_ends_with: String
  type: String
  type_not: String
  type_in: [String!]
  type_not_in: [String!]
  type_lt: String
  type_lte: String
  type_gt: String
  type_gte: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [GameScalarWhereInput!]
  OR: [GameScalarWhereInput!]
  NOT: [GameScalarWhereInput!]
}

type GameSubscriptionPayload {
  mutation: MutationType!
  node: Game
  updatedFields: [String!]
  previousValues: GamePreviousValues
}

input GameSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: GameWhereInput
  AND: [GameSubscriptionWhereInput!]
  OR: [GameSubscriptionWhereInput!]
  NOT: [GameSubscriptionWhereInput!]
}

input GameUpdateDataInput {
  name: String
  keywords: GameUpdatekeywordsInput
  img: String
  backgroundImg: String
  summary: String
  location: String
  gallery: GalleryUpdateOneInput
  showreel: String
  user: UserUpdateOneRequiredWithoutGamesInput
  type: String
  jobs: JobUpdateManyWithoutGameInput
}

input GameUpdateInput {
  name: String
  keywords: GameUpdatekeywordsInput
  img: String
  backgroundImg: String
  summary: String
  location: String
  gallery: GalleryUpdateOneInput
  showreel: String
  user: UserUpdateOneRequiredWithoutGamesInput
  type: String
  jobs: JobUpdateManyWithoutGameInput
}

input GameUpdatekeywordsInput {
  set: [String!]
}

input GameUpdateManyDataInput {
  name: String
  keywords: GameUpdatekeywordsInput
  img: String
  backgroundImg: String
  summary: String
  location: String
  showreel: String
  type: String
}

input GameUpdateManyMutationInput {
  name: String
  keywords: GameUpdatekeywordsInput
  img: String
  backgroundImg: String
  summary: String
  location: String
  showreel: String
  type: String
}

input GameUpdateManyWithoutUserInput {
  create: [GameCreateWithoutUserInput!]
  delete: [GameWhereUniqueInput!]
  connect: [GameWhereUniqueInput!]
  set: [GameWhereUniqueInput!]
  disconnect: [GameWhereUniqueInput!]
  update: [GameUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [GameUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [GameScalarWhereInput!]
  updateMany: [GameUpdateManyWithWhereNestedInput!]
}

input GameUpdateManyWithWhereNestedInput {
  where: GameScalarWhereInput!
  data: GameUpdateManyDataInput!
}

input GameUpdateOneRequiredInput {
  create: GameCreateInput
  update: GameUpdateDataInput
  upsert: GameUpsertNestedInput
  connect: GameWhereUniqueInput
}

input GameUpdateOneRequiredWithoutJobsInput {
  create: GameCreateWithoutJobsInput
  update: GameUpdateWithoutJobsDataInput
  upsert: GameUpsertWithoutJobsInput
  connect: GameWhereUniqueInput
}

input GameUpdateWithoutJobsDataInput {
  name: String
  keywords: GameUpdatekeywordsInput
  img: String
  backgroundImg: String
  summary: String
  location: String
  gallery: GalleryUpdateOneInput
  showreel: String
  user: UserUpdateOneRequiredWithoutGamesInput
  type: String
}

input GameUpdateWithoutUserDataInput {
  name: String
  keywords: GameUpdatekeywordsInput
  img: String
  backgroundImg: String
  summary: String
  location: String
  gallery: GalleryUpdateOneInput
  showreel: String
  type: String
  jobs: JobUpdateManyWithoutGameInput
}

input GameUpdateWithWhereUniqueWithoutUserInput {
  where: GameWhereUniqueInput!
  data: GameUpdateWithoutUserDataInput!
}

input GameUpsertNestedInput {
  update: GameUpdateDataInput!
  create: GameCreateInput!
}

input GameUpsertWithoutJobsInput {
  update: GameUpdateWithoutJobsDataInput!
  create: GameCreateWithoutJobsInput!
}

input GameUpsertWithWhereUniqueWithoutUserInput {
  where: GameWhereUniqueInput!
  update: GameUpdateWithoutUserDataInput!
  create: GameCreateWithoutUserInput!
}

input GameWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  img: String
  img_not: String
  img_in: [String!]
  img_not_in: [String!]
  img_lt: String
  img_lte: String
  img_gt: String
  img_gte: String
  img_contains: String
  img_not_contains: String
  img_starts_with: String
  img_not_starts_with: String
  img_ends_with: String
  img_not_ends_with: String
  backgroundImg: String
  backgroundImg_not: String
  backgroundImg_in: [String!]
  backgroundImg_not_in: [String!]
  backgroundImg_lt: String
  backgroundImg_lte: String
  backgroundImg_gt: String
  backgroundImg_gte: String
  backgroundImg_contains: String
  backgroundImg_not_contains: String
  backgroundImg_starts_with: String
  backgroundImg_not_starts_with: String
  backgroundImg_ends_with: String
  backgroundImg_not_ends_with: String
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  gallery: GalleryWhereInput
  showreel: String
  showreel_not: String
  showreel_in: [String!]
  showreel_not_in: [String!]
  showreel_lt: String
  showreel_lte: String
  showreel_gt: String
  showreel_gte: String
  showreel_contains: String
  showreel_not_contains: String
  showreel_starts_with: String
  showreel_not_starts_with: String
  showreel_ends_with: String
  showreel_not_ends_with: String
  user: UserWhereInput
  type: String
  type_not: String
  type_in: [String!]
  type_not_in: [String!]
  type_lt: String
  type_lte: String
  type_gt: String
  type_gte: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  jobs_every: JobWhereInput
  jobs_some: JobWhereInput
  jobs_none: JobWhereInput
  AND: [GameWhereInput!]
  OR: [GameWhereInput!]
  NOT: [GameWhereInput!]
}

input GameWhereUniqueInput {
  id: ID
}

type Invite {
  id: ID!
  title: String!
  message: String!
  status: String
  game: Game!
  job: Job!
  user: User!
  receiver: User!
  contracts(where: ContractWhereInput, orderBy: ContractOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Contract!]
}

type InviteConnection {
  pageInfo: PageInfo!
  edges: [InviteEdge]!
  aggregate: AggregateInvite!
}

input InviteCreateInput {
  id: ID
  title: String!
  message: String!
  status: String
  game: GameCreateOneInput!
  job: JobCreateOneWithoutInviteInput!
  user: UserCreateOneWithoutInvitesInput!
  receiver: UserCreateOneWithoutInvitesReceivedInput!
  contracts: ContractCreateManyWithoutInviteInput
}

input InviteCreateManyWithoutJobInput {
  create: [InviteCreateWithoutJobInput!]
  connect: [InviteWhereUniqueInput!]
}

input InviteCreateManyWithoutReceiverInput {
  create: [InviteCreateWithoutReceiverInput!]
  connect: [InviteWhereUniqueInput!]
}

input InviteCreateManyWithoutUserInput {
  create: [InviteCreateWithoutUserInput!]
  connect: [InviteWhereUniqueInput!]
}

input InviteCreateOneWithoutContractsInput {
  create: InviteCreateWithoutContractsInput
  connect: InviteWhereUniqueInput
}

input InviteCreateWithoutContractsInput {
  id: ID
  title: String!
  message: String!
  status: String
  game: GameCreateOneInput!
  job: JobCreateOneWithoutInviteInput!
  user: UserCreateOneWithoutInvitesInput!
  receiver: UserCreateOneWithoutInvitesReceivedInput!
}

input InviteCreateWithoutJobInput {
  id: ID
  title: String!
  message: String!
  status: String
  game: GameCreateOneInput!
  user: UserCreateOneWithoutInvitesInput!
  receiver: UserCreateOneWithoutInvitesReceivedInput!
  contracts: ContractCreateManyWithoutInviteInput
}

input InviteCreateWithoutReceiverInput {
  id: ID
  title: String!
  message: String!
  status: String
  game: GameCreateOneInput!
  job: JobCreateOneWithoutInviteInput!
  user: UserCreateOneWithoutInvitesInput!
  contracts: ContractCreateManyWithoutInviteInput
}

input InviteCreateWithoutUserInput {
  id: ID
  title: String!
  message: String!
  status: String
  game: GameCreateOneInput!
  job: JobCreateOneWithoutInviteInput!
  receiver: UserCreateOneWithoutInvitesReceivedInput!
  contracts: ContractCreateManyWithoutInviteInput
}

type InviteEdge {
  node: Invite!
  cursor: String!
}

enum InviteOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  message_ASC
  message_DESC
  status_ASC
  status_DESC
}

type InvitePreviousValues {
  id: ID!
  title: String!
  message: String!
  status: String
}

input InviteScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  message: String
  message_not: String
  message_in: [String!]
  message_not_in: [String!]
  message_lt: String
  message_lte: String
  message_gt: String
  message_gte: String
  message_contains: String
  message_not_contains: String
  message_starts_with: String
  message_not_starts_with: String
  message_ends_with: String
  message_not_ends_with: String
  status: String
  status_not: String
  status_in: [String!]
  status_not_in: [String!]
  status_lt: String
  status_lte: String
  status_gt: String
  status_gte: String
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  AND: [InviteScalarWhereInput!]
  OR: [InviteScalarWhereInput!]
  NOT: [InviteScalarWhereInput!]
}

type InviteSubscriptionPayload {
  mutation: MutationType!
  node: Invite
  updatedFields: [String!]
  previousValues: InvitePreviousValues
}

input InviteSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: InviteWhereInput
  AND: [InviteSubscriptionWhereInput!]
  OR: [InviteSubscriptionWhereInput!]
  NOT: [InviteSubscriptionWhereInput!]
}

input InviteUpdateInput {
  title: String
  message: String
  status: String
  game: GameUpdateOneRequiredInput
  job: JobUpdateOneRequiredWithoutInviteInput
  user: UserUpdateOneRequiredWithoutInvitesInput
  receiver: UserUpdateOneRequiredWithoutInvitesReceivedInput
  contracts: ContractUpdateManyWithoutInviteInput
}

input InviteUpdateManyDataInput {
  title: String
  message: String
  status: String
}

input InviteUpdateManyMutationInput {
  title: String
  message: String
  status: String
}

input InviteUpdateManyWithoutJobInput {
  create: [InviteCreateWithoutJobInput!]
  delete: [InviteWhereUniqueInput!]
  connect: [InviteWhereUniqueInput!]
  set: [InviteWhereUniqueInput!]
  disconnect: [InviteWhereUniqueInput!]
  update: [InviteUpdateWithWhereUniqueWithoutJobInput!]
  upsert: [InviteUpsertWithWhereUniqueWithoutJobInput!]
  deleteMany: [InviteScalarWhereInput!]
  updateMany: [InviteUpdateManyWithWhereNestedInput!]
}

input InviteUpdateManyWithoutReceiverInput {
  create: [InviteCreateWithoutReceiverInput!]
  delete: [InviteWhereUniqueInput!]
  connect: [InviteWhereUniqueInput!]
  set: [InviteWhereUniqueInput!]
  disconnect: [InviteWhereUniqueInput!]
  update: [InviteUpdateWithWhereUniqueWithoutReceiverInput!]
  upsert: [InviteUpsertWithWhereUniqueWithoutReceiverInput!]
  deleteMany: [InviteScalarWhereInput!]
  updateMany: [InviteUpdateManyWithWhereNestedInput!]
}

input InviteUpdateManyWithoutUserInput {
  create: [InviteCreateWithoutUserInput!]
  delete: [InviteWhereUniqueInput!]
  connect: [InviteWhereUniqueInput!]
  set: [InviteWhereUniqueInput!]
  disconnect: [InviteWhereUniqueInput!]
  update: [InviteUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [InviteUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [InviteScalarWhereInput!]
  updateMany: [InviteUpdateManyWithWhereNestedInput!]
}

input InviteUpdateManyWithWhereNestedInput {
  where: InviteScalarWhereInput!
  data: InviteUpdateManyDataInput!
}

input InviteUpdateOneRequiredWithoutContractsInput {
  create: InviteCreateWithoutContractsInput
  update: InviteUpdateWithoutContractsDataInput
  upsert: InviteUpsertWithoutContractsInput
  connect: InviteWhereUniqueInput
}

input InviteUpdateWithoutContractsDataInput {
  title: String
  message: String
  status: String
  game: GameUpdateOneRequiredInput
  job: JobUpdateOneRequiredWithoutInviteInput
  user: UserUpdateOneRequiredWithoutInvitesInput
  receiver: UserUpdateOneRequiredWithoutInvitesReceivedInput
}

input InviteUpdateWithoutJobDataInput {
  title: String
  message: String
  status: String
  game: GameUpdateOneRequiredInput
  user: UserUpdateOneRequiredWithoutInvitesInput
  receiver: UserUpdateOneRequiredWithoutInvitesReceivedInput
  contracts: ContractUpdateManyWithoutInviteInput
}

input InviteUpdateWithoutReceiverDataInput {
  title: String
  message: String
  status: String
  game: GameUpdateOneRequiredInput
  job: JobUpdateOneRequiredWithoutInviteInput
  user: UserUpdateOneRequiredWithoutInvitesInput
  contracts: ContractUpdateManyWithoutInviteInput
}

input InviteUpdateWithoutUserDataInput {
  title: String
  message: String
  status: String
  game: GameUpdateOneRequiredInput
  job: JobUpdateOneRequiredWithoutInviteInput
  receiver: UserUpdateOneRequiredWithoutInvitesReceivedInput
  contracts: ContractUpdateManyWithoutInviteInput
}

input InviteUpdateWithWhereUniqueWithoutJobInput {
  where: InviteWhereUniqueInput!
  data: InviteUpdateWithoutJobDataInput!
}

input InviteUpdateWithWhereUniqueWithoutReceiverInput {
  where: InviteWhereUniqueInput!
  data: InviteUpdateWithoutReceiverDataInput!
}

input InviteUpdateWithWhereUniqueWithoutUserInput {
  where: InviteWhereUniqueInput!
  data: InviteUpdateWithoutUserDataInput!
}

input InviteUpsertWithoutContractsInput {
  update: InviteUpdateWithoutContractsDataInput!
  create: InviteCreateWithoutContractsInput!
}

input InviteUpsertWithWhereUniqueWithoutJobInput {
  where: InviteWhereUniqueInput!
  update: InviteUpdateWithoutJobDataInput!
  create: InviteCreateWithoutJobInput!
}

input InviteUpsertWithWhereUniqueWithoutReceiverInput {
  where: InviteWhereUniqueInput!
  update: InviteUpdateWithoutReceiverDataInput!
  create: InviteCreateWithoutReceiverInput!
}

input InviteUpsertWithWhereUniqueWithoutUserInput {
  where: InviteWhereUniqueInput!
  update: InviteUpdateWithoutUserDataInput!
  create: InviteCreateWithoutUserInput!
}

input InviteWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  message: String
  message_not: String
  message_in: [String!]
  message_not_in: [String!]
  message_lt: String
  message_lte: String
  message_gt: String
  message_gte: String
  message_contains: String
  message_not_contains: String
  message_starts_with: String
  message_not_starts_with: String
  message_ends_with: String
  message_not_ends_with: String
  status: String
  status_not: String
  status_in: [String!]
  status_not_in: [String!]
  status_lt: String
  status_lte: String
  status_gt: String
  status_gte: String
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  game: GameWhereInput
  job: JobWhereInput
  user: UserWhereInput
  receiver: UserWhereInput
  contracts_every: ContractWhereInput
  contracts_some: ContractWhereInput
  contracts_none: ContractWhereInput
  AND: [InviteWhereInput!]
  OR: [InviteWhereInput!]
  NOT: [InviteWhereInput!]
}

input InviteWhereUniqueInput {
  id: ID
}

type Job {
  id: ID!
  name: String!
  keywords: [String!]!
  img: String
  summary: String
  creativeSummary: String
  location: String
  gallery: Gallery
  showreel: String
  user: User!
  type: String
  createdAt: DateTime!
  game: Game!
  submitted: Boolean
  invite(where: InviteWhereInput, orderBy: InviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Invite!]
  messages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message!]
  conversations(where: ConversationWhereInput, orderBy: ConversationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Conversation!]
}

type JobConnection {
  pageInfo: PageInfo!
  edges: [JobEdge]!
  aggregate: AggregateJob!
}

input JobCreateInput {
  id: ID
  name: String!
  keywords: JobCreatekeywordsInput
  img: String
  summary: String
  creativeSummary: String
  location: String
  gallery: GalleryCreateOneInput
  showreel: String
  user: UserCreateOneWithoutJobsInput!
  type: String
  game: GameCreateOneWithoutJobsInput!
  submitted: Boolean
  invite: InviteCreateManyWithoutJobInput
  messages: MessageCreateManyWithoutJobInput
  conversations: ConversationCreateManyWithoutJobInput
}

input JobCreatekeywordsInput {
  set: [String!]
}

input JobCreateManyWithoutGameInput {
  create: [JobCreateWithoutGameInput!]
  connect: [JobWhereUniqueInput!]
}

input JobCreateManyWithoutUserInput {
  create: [JobCreateWithoutUserInput!]
  connect: [JobWhereUniqueInput!]
}

input JobCreateOneWithoutConversationsInput {
  create: JobCreateWithoutConversationsInput
  connect: JobWhereUniqueInput
}

input JobCreateOneWithoutInviteInput {
  create: JobCreateWithoutInviteInput
  connect: JobWhereUniqueInput
}

input JobCreateOneWithoutMessagesInput {
  create: JobCreateWithoutMessagesInput
  connect: JobWhereUniqueInput
}

input JobCreateWithoutConversationsInput {
  id: ID
  name: String!
  keywords: JobCreatekeywordsInput
  img: String
  summary: String
  creativeSummary: String
  location: String
  gallery: GalleryCreateOneInput
  showreel: String
  user: UserCreateOneWithoutJobsInput!
  type: String
  game: GameCreateOneWithoutJobsInput!
  submitted: Boolean
  invite: InviteCreateManyWithoutJobInput
  messages: MessageCreateManyWithoutJobInput
}

input JobCreateWithoutGameInput {
  id: ID
  name: String!
  keywords: JobCreatekeywordsInput
  img: String
  summary: String
  creativeSummary: String
  location: String
  gallery: GalleryCreateOneInput
  showreel: String
  user: UserCreateOneWithoutJobsInput!
  type: String
  submitted: Boolean
  invite: InviteCreateManyWithoutJobInput
  messages: MessageCreateManyWithoutJobInput
  conversations: ConversationCreateManyWithoutJobInput
}

input JobCreateWithoutInviteInput {
  id: ID
  name: String!
  keywords: JobCreatekeywordsInput
  img: String
  summary: String
  creativeSummary: String
  location: String
  gallery: GalleryCreateOneInput
  showreel: String
  user: UserCreateOneWithoutJobsInput!
  type: String
  game: GameCreateOneWithoutJobsInput!
  submitted: Boolean
  messages: MessageCreateManyWithoutJobInput
  conversations: ConversationCreateManyWithoutJobInput
}

input JobCreateWithoutMessagesInput {
  id: ID
  name: String!
  keywords: JobCreatekeywordsInput
  img: String
  summary: String
  creativeSummary: String
  location: String
  gallery: GalleryCreateOneInput
  showreel: String
  user: UserCreateOneWithoutJobsInput!
  type: String
  game: GameCreateOneWithoutJobsInput!
  submitted: Boolean
  invite: InviteCreateManyWithoutJobInput
  conversations: ConversationCreateManyWithoutJobInput
}

input JobCreateWithoutUserInput {
  id: ID
  name: String!
  keywords: JobCreatekeywordsInput
  img: String
  summary: String
  creativeSummary: String
  location: String
  gallery: GalleryCreateOneInput
  showreel: String
  type: String
  game: GameCreateOneWithoutJobsInput!
  submitted: Boolean
  invite: InviteCreateManyWithoutJobInput
  messages: MessageCreateManyWithoutJobInput
  conversations: ConversationCreateManyWithoutJobInput
}

type JobEdge {
  node: Job!
  cursor: String!
}

enum JobOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  img_ASC
  img_DESC
  summary_ASC
  summary_DESC
  creativeSummary_ASC
  creativeSummary_DESC
  location_ASC
  location_DESC
  showreel_ASC
  showreel_DESC
  type_ASC
  type_DESC
  createdAt_ASC
  createdAt_DESC
  submitted_ASC
  submitted_DESC
}

type JobPreviousValues {
  id: ID!
  name: String!
  keywords: [String!]!
  img: String
  summary: String
  creativeSummary: String
  location: String
  showreel: String
  type: String
  createdAt: DateTime!
  submitted: Boolean
}

input JobScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  img: String
  img_not: String
  img_in: [String!]
  img_not_in: [String!]
  img_lt: String
  img_lte: String
  img_gt: String
  img_gte: String
  img_contains: String
  img_not_contains: String
  img_starts_with: String
  img_not_starts_with: String
  img_ends_with: String
  img_not_ends_with: String
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  creativeSummary: String
  creativeSummary_not: String
  creativeSummary_in: [String!]
  creativeSummary_not_in: [String!]
  creativeSummary_lt: String
  creativeSummary_lte: String
  creativeSummary_gt: String
  creativeSummary_gte: String
  creativeSummary_contains: String
  creativeSummary_not_contains: String
  creativeSummary_starts_with: String
  creativeSummary_not_starts_with: String
  creativeSummary_ends_with: String
  creativeSummary_not_ends_with: String
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  showreel: String
  showreel_not: String
  showreel_in: [String!]
  showreel_not_in: [String!]
  showreel_lt: String
  showreel_lte: String
  showreel_gt: String
  showreel_gte: String
  showreel_contains: String
  showreel_not_contains: String
  showreel_starts_with: String
  showreel_not_starts_with: String
  showreel_ends_with: String
  showreel_not_ends_with: String
  type: String
  type_not: String
  type_in: [String!]
  type_not_in: [String!]
  type_lt: String
  type_lte: String
  type_gt: String
  type_gte: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  submitted: Boolean
  submitted_not: Boolean
  AND: [JobScalarWhereInput!]
  OR: [JobScalarWhereInput!]
  NOT: [JobScalarWhereInput!]
}

type JobSubscriptionPayload {
  mutation: MutationType!
  node: Job
  updatedFields: [String!]
  previousValues: JobPreviousValues
}

input JobSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: JobWhereInput
  AND: [JobSubscriptionWhereInput!]
  OR: [JobSubscriptionWhereInput!]
  NOT: [JobSubscriptionWhereInput!]
}

input JobUpdateInput {
  name: String
  keywords: JobUpdatekeywordsInput
  img: String
  summary: String
  creativeSummary: String
  location: String
  gallery: GalleryUpdateOneInput
  showreel: String
  user: UserUpdateOneRequiredWithoutJobsInput
  type: String
  game: GameUpdateOneRequiredWithoutJobsInput
  submitted: Boolean
  invite: InviteUpdateManyWithoutJobInput
  messages: MessageUpdateManyWithoutJobInput
  conversations: ConversationUpdateManyWithoutJobInput
}

input JobUpdatekeywordsInput {
  set: [String!]
}

input JobUpdateManyDataInput {
  name: String
  keywords: JobUpdatekeywordsInput
  img: String
  summary: String
  creativeSummary: String
  location: String
  showreel: String
  type: String
  submitted: Boolean
}

input JobUpdateManyMutationInput {
  name: String
  keywords: JobUpdatekeywordsInput
  img: String
  summary: String
  creativeSummary: String
  location: String
  showreel: String
  type: String
  submitted: Boolean
}

input JobUpdateManyWithoutGameInput {
  create: [JobCreateWithoutGameInput!]
  delete: [JobWhereUniqueInput!]
  connect: [JobWhereUniqueInput!]
  set: [JobWhereUniqueInput!]
  disconnect: [JobWhereUniqueInput!]
  update: [JobUpdateWithWhereUniqueWithoutGameInput!]
  upsert: [JobUpsertWithWhereUniqueWithoutGameInput!]
  deleteMany: [JobScalarWhereInput!]
  updateMany: [JobUpdateManyWithWhereNestedInput!]
}

input JobUpdateManyWithoutUserInput {
  create: [JobCreateWithoutUserInput!]
  delete: [JobWhereUniqueInput!]
  connect: [JobWhereUniqueInput!]
  set: [JobWhereUniqueInput!]
  disconnect: [JobWhereUniqueInput!]
  update: [JobUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [JobUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [JobScalarWhereInput!]
  updateMany: [JobUpdateManyWithWhereNestedInput!]
}

input JobUpdateManyWithWhereNestedInput {
  where: JobScalarWhereInput!
  data: JobUpdateManyDataInput!
}

input JobUpdateOneRequiredWithoutInviteInput {
  create: JobCreateWithoutInviteInput
  update: JobUpdateWithoutInviteDataInput
  upsert: JobUpsertWithoutInviteInput
  connect: JobWhereUniqueInput
}

input JobUpdateOneWithoutConversationsInput {
  create: JobCreateWithoutConversationsInput
  update: JobUpdateWithoutConversationsDataInput
  upsert: JobUpsertWithoutConversationsInput
  delete: Boolean
  disconnect: Boolean
  connect: JobWhereUniqueInput
}

input JobUpdateOneWithoutMessagesInput {
  create: JobCreateWithoutMessagesInput
  update: JobUpdateWithoutMessagesDataInput
  upsert: JobUpsertWithoutMessagesInput
  delete: Boolean
  disconnect: Boolean
  connect: JobWhereUniqueInput
}

input JobUpdateWithoutConversationsDataInput {
  name: String
  keywords: JobUpdatekeywordsInput
  img: String
  summary: String
  creativeSummary: String
  location: String
  gallery: GalleryUpdateOneInput
  showreel: String
  user: UserUpdateOneRequiredWithoutJobsInput
  type: String
  game: GameUpdateOneRequiredWithoutJobsInput
  submitted: Boolean
  invite: InviteUpdateManyWithoutJobInput
  messages: MessageUpdateManyWithoutJobInput
}

input JobUpdateWithoutGameDataInput {
  name: String
  keywords: JobUpdatekeywordsInput
  img: String
  summary: String
  creativeSummary: String
  location: String
  gallery: GalleryUpdateOneInput
  showreel: String
  user: UserUpdateOneRequiredWithoutJobsInput
  type: String
  submitted: Boolean
  invite: InviteUpdateManyWithoutJobInput
  messages: MessageUpdateManyWithoutJobInput
  conversations: ConversationUpdateManyWithoutJobInput
}

input JobUpdateWithoutInviteDataInput {
  name: String
  keywords: JobUpdatekeywordsInput
  img: String
  summary: String
  creativeSummary: String
  location: String
  gallery: GalleryUpdateOneInput
  showreel: String
  user: UserUpdateOneRequiredWithoutJobsInput
  type: String
  game: GameUpdateOneRequiredWithoutJobsInput
  submitted: Boolean
  messages: MessageUpdateManyWithoutJobInput
  conversations: ConversationUpdateManyWithoutJobInput
}

input JobUpdateWithoutMessagesDataInput {
  name: String
  keywords: JobUpdatekeywordsInput
  img: String
  summary: String
  creativeSummary: String
  location: String
  gallery: GalleryUpdateOneInput
  showreel: String
  user: UserUpdateOneRequiredWithoutJobsInput
  type: String
  game: GameUpdateOneRequiredWithoutJobsInput
  submitted: Boolean
  invite: InviteUpdateManyWithoutJobInput
  conversations: ConversationUpdateManyWithoutJobInput
}

input JobUpdateWithoutUserDataInput {
  name: String
  keywords: JobUpdatekeywordsInput
  img: String
  summary: String
  creativeSummary: String
  location: String
  gallery: GalleryUpdateOneInput
  showreel: String
  type: String
  game: GameUpdateOneRequiredWithoutJobsInput
  submitted: Boolean
  invite: InviteUpdateManyWithoutJobInput
  messages: MessageUpdateManyWithoutJobInput
  conversations: ConversationUpdateManyWithoutJobInput
}

input JobUpdateWithWhereUniqueWithoutGameInput {
  where: JobWhereUniqueInput!
  data: JobUpdateWithoutGameDataInput!
}

input JobUpdateWithWhereUniqueWithoutUserInput {
  where: JobWhereUniqueInput!
  data: JobUpdateWithoutUserDataInput!
}

input JobUpsertWithoutConversationsInput {
  update: JobUpdateWithoutConversationsDataInput!
  create: JobCreateWithoutConversationsInput!
}

input JobUpsertWithoutInviteInput {
  update: JobUpdateWithoutInviteDataInput!
  create: JobCreateWithoutInviteInput!
}

input JobUpsertWithoutMessagesInput {
  update: JobUpdateWithoutMessagesDataInput!
  create: JobCreateWithoutMessagesInput!
}

input JobUpsertWithWhereUniqueWithoutGameInput {
  where: JobWhereUniqueInput!
  update: JobUpdateWithoutGameDataInput!
  create: JobCreateWithoutGameInput!
}

input JobUpsertWithWhereUniqueWithoutUserInput {
  where: JobWhereUniqueInput!
  update: JobUpdateWithoutUserDataInput!
  create: JobCreateWithoutUserInput!
}

input JobWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  img: String
  img_not: String
  img_in: [String!]
  img_not_in: [String!]
  img_lt: String
  img_lte: String
  img_gt: String
  img_gte: String
  img_contains: String
  img_not_contains: String
  img_starts_with: String
  img_not_starts_with: String
  img_ends_with: String
  img_not_ends_with: String
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  creativeSummary: String
  creativeSummary_not: String
  creativeSummary_in: [String!]
  creativeSummary_not_in: [String!]
  creativeSummary_lt: String
  creativeSummary_lte: String
  creativeSummary_gt: String
  creativeSummary_gte: String
  creativeSummary_contains: String
  creativeSummary_not_contains: String
  creativeSummary_starts_with: String
  creativeSummary_not_starts_with: String
  creativeSummary_ends_with: String
  creativeSummary_not_ends_with: String
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  gallery: GalleryWhereInput
  showreel: String
  showreel_not: String
  showreel_in: [String!]
  showreel_not_in: [String!]
  showreel_lt: String
  showreel_lte: String
  showreel_gt: String
  showreel_gte: String
  showreel_contains: String
  showreel_not_contains: String
  showreel_starts_with: String
  showreel_not_starts_with: String
  showreel_ends_with: String
  showreel_not_ends_with: String
  user: UserWhereInput
  type: String
  type_not: String
  type_in: [String!]
  type_not_in: [String!]
  type_lt: String
  type_lte: String
  type_gt: String
  type_gte: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  game: GameWhereInput
  submitted: Boolean
  submitted_not: Boolean
  invite_every: InviteWhereInput
  invite_some: InviteWhereInput
  invite_none: InviteWhereInput
  messages_every: MessageWhereInput
  messages_some: MessageWhereInput
  messages_none: MessageWhereInput
  conversations_every: ConversationWhereInput
  conversations_some: ConversationWhereInput
  conversations_none: ConversationWhereInput
  AND: [JobWhereInput!]
  OR: [JobWhereInput!]
  NOT: [JobWhereInput!]
}

input JobWhereUniqueInput {
  id: ID
}

scalar Long

type Message {
  id: ID!
  messageStr: String!
  job: Job
  sender: User!
  receiver: User
  createdAt: DateTime!
  status: String
  conversation: Conversation
}

type MessageConnection {
  pageInfo: PageInfo!
  edges: [MessageEdge]!
  aggregate: AggregateMessage!
}

input MessageCreateInput {
  id: ID
  messageStr: String!
  job: JobCreateOneWithoutMessagesInput
  sender: UserCreateOneWithoutMessagesSentInput!
  receiver: UserCreateOneWithoutMessagesReceivedInput
  status: String
  conversation: ConversationCreateOneWithoutMessagesInput
}

input MessageCreateManyWithoutConversationInput {
  create: [MessageCreateWithoutConversationInput!]
  connect: [MessageWhereUniqueInput!]
}

input MessageCreateManyWithoutJobInput {
  create: [MessageCreateWithoutJobInput!]
  connect: [MessageWhereUniqueInput!]
}

input MessageCreateManyWithoutReceiverInput {
  create: [MessageCreateWithoutReceiverInput!]
  connect: [MessageWhereUniqueInput!]
}

input MessageCreateManyWithoutSenderInput {
  create: [MessageCreateWithoutSenderInput!]
  connect: [MessageWhereUniqueInput!]
}

input MessageCreateWithoutConversationInput {
  id: ID
  messageStr: String!
  job: JobCreateOneWithoutMessagesInput
  sender: UserCreateOneWithoutMessagesSentInput!
  receiver: UserCreateOneWithoutMessagesReceivedInput
  status: String
}

input MessageCreateWithoutJobInput {
  id: ID
  messageStr: String!
  sender: UserCreateOneWithoutMessagesSentInput!
  receiver: UserCreateOneWithoutMessagesReceivedInput
  status: String
  conversation: ConversationCreateOneWithoutMessagesInput
}

input MessageCreateWithoutReceiverInput {
  id: ID
  messageStr: String!
  job: JobCreateOneWithoutMessagesInput
  sender: UserCreateOneWithoutMessagesSentInput!
  status: String
  conversation: ConversationCreateOneWithoutMessagesInput
}

input MessageCreateWithoutSenderInput {
  id: ID
  messageStr: String!
  job: JobCreateOneWithoutMessagesInput
  receiver: UserCreateOneWithoutMessagesReceivedInput
  status: String
  conversation: ConversationCreateOneWithoutMessagesInput
}

type MessageEdge {
  node: Message!
  cursor: String!
}

enum MessageOrderByInput {
  id_ASC
  id_DESC
  messageStr_ASC
  messageStr_DESC
  createdAt_ASC
  createdAt_DESC
  status_ASC
  status_DESC
}

type MessagePreviousValues {
  id: ID!
  messageStr: String!
  createdAt: DateTime!
  status: String
}

input MessageScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  messageStr: String
  messageStr_not: String
  messageStr_in: [String!]
  messageStr_not_in: [String!]
  messageStr_lt: String
  messageStr_lte: String
  messageStr_gt: String
  messageStr_gte: String
  messageStr_contains: String
  messageStr_not_contains: String
  messageStr_starts_with: String
  messageStr_not_starts_with: String
  messageStr_ends_with: String
  messageStr_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  status: String
  status_not: String
  status_in: [String!]
  status_not_in: [String!]
  status_lt: String
  status_lte: String
  status_gt: String
  status_gte: String
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  AND: [MessageScalarWhereInput!]
  OR: [MessageScalarWhereInput!]
  NOT: [MessageScalarWhereInput!]
}

type MessageSubscriptionPayload {
  mutation: MutationType!
  node: Message
  updatedFields: [String!]
  previousValues: MessagePreviousValues
}

input MessageSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: MessageWhereInput
  AND: [MessageSubscriptionWhereInput!]
  OR: [MessageSubscriptionWhereInput!]
  NOT: [MessageSubscriptionWhereInput!]
}

input MessageUpdateInput {
  messageStr: String
  job: JobUpdateOneWithoutMessagesInput
  sender: UserUpdateOneRequiredWithoutMessagesSentInput
  receiver: UserUpdateOneWithoutMessagesReceivedInput
  status: String
  conversation: ConversationUpdateOneWithoutMessagesInput
}

input MessageUpdateManyDataInput {
  messageStr: String
  status: String
}

input MessageUpdateManyMutationInput {
  messageStr: String
  status: String
}

input MessageUpdateManyWithoutConversationInput {
  create: [MessageCreateWithoutConversationInput!]
  delete: [MessageWhereUniqueInput!]
  connect: [MessageWhereUniqueInput!]
  set: [MessageWhereUniqueInput!]
  disconnect: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueWithoutConversationInput!]
  upsert: [MessageUpsertWithWhereUniqueWithoutConversationInput!]
  deleteMany: [MessageScalarWhereInput!]
  updateMany: [MessageUpdateManyWithWhereNestedInput!]
}

input MessageUpdateManyWithoutJobInput {
  create: [MessageCreateWithoutJobInput!]
  delete: [MessageWhereUniqueInput!]
  connect: [MessageWhereUniqueInput!]
  set: [MessageWhereUniqueInput!]
  disconnect: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueWithoutJobInput!]
  upsert: [MessageUpsertWithWhereUniqueWithoutJobInput!]
  deleteMany: [MessageScalarWhereInput!]
  updateMany: [MessageUpdateManyWithWhereNestedInput!]
}

input MessageUpdateManyWithoutReceiverInput {
  create: [MessageCreateWithoutReceiverInput!]
  delete: [MessageWhereUniqueInput!]
  connect: [MessageWhereUniqueInput!]
  set: [MessageWhereUniqueInput!]
  disconnect: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueWithoutReceiverInput!]
  upsert: [MessageUpsertWithWhereUniqueWithoutReceiverInput!]
  deleteMany: [MessageScalarWhereInput!]
  updateMany: [MessageUpdateManyWithWhereNestedInput!]
}

input MessageUpdateManyWithoutSenderInput {
  create: [MessageCreateWithoutSenderInput!]
  delete: [MessageWhereUniqueInput!]
  connect: [MessageWhereUniqueInput!]
  set: [MessageWhereUniqueInput!]
  disconnect: [MessageWhereUniqueInput!]
  update: [MessageUpdateWithWhereUniqueWithoutSenderInput!]
  upsert: [MessageUpsertWithWhereUniqueWithoutSenderInput!]
  deleteMany: [MessageScalarWhereInput!]
  updateMany: [MessageUpdateManyWithWhereNestedInput!]
}

input MessageUpdateManyWithWhereNestedInput {
  where: MessageScalarWhereInput!
  data: MessageUpdateManyDataInput!
}

input MessageUpdateWithoutConversationDataInput {
  messageStr: String
  job: JobUpdateOneWithoutMessagesInput
  sender: UserUpdateOneRequiredWithoutMessagesSentInput
  receiver: UserUpdateOneWithoutMessagesReceivedInput
  status: String
}

input MessageUpdateWithoutJobDataInput {
  messageStr: String
  sender: UserUpdateOneRequiredWithoutMessagesSentInput
  receiver: UserUpdateOneWithoutMessagesReceivedInput
  status: String
  conversation: ConversationUpdateOneWithoutMessagesInput
}

input MessageUpdateWithoutReceiverDataInput {
  messageStr: String
  job: JobUpdateOneWithoutMessagesInput
  sender: UserUpdateOneRequiredWithoutMessagesSentInput
  status: String
  conversation: ConversationUpdateOneWithoutMessagesInput
}

input MessageUpdateWithoutSenderDataInput {
  messageStr: String
  job: JobUpdateOneWithoutMessagesInput
  receiver: UserUpdateOneWithoutMessagesReceivedInput
  status: String
  conversation: ConversationUpdateOneWithoutMessagesInput
}

input MessageUpdateWithWhereUniqueWithoutConversationInput {
  where: MessageWhereUniqueInput!
  data: MessageUpdateWithoutConversationDataInput!
}

input MessageUpdateWithWhereUniqueWithoutJobInput {
  where: MessageWhereUniqueInput!
  data: MessageUpdateWithoutJobDataInput!
}

input MessageUpdateWithWhereUniqueWithoutReceiverInput {
  where: MessageWhereUniqueInput!
  data: MessageUpdateWithoutReceiverDataInput!
}

input MessageUpdateWithWhereUniqueWithoutSenderInput {
  where: MessageWhereUniqueInput!
  data: MessageUpdateWithoutSenderDataInput!
}

input MessageUpsertWithWhereUniqueWithoutConversationInput {
  where: MessageWhereUniqueInput!
  update: MessageUpdateWithoutConversationDataInput!
  create: MessageCreateWithoutConversationInput!
}

input MessageUpsertWithWhereUniqueWithoutJobInput {
  where: MessageWhereUniqueInput!
  update: MessageUpdateWithoutJobDataInput!
  create: MessageCreateWithoutJobInput!
}

input MessageUpsertWithWhereUniqueWithoutReceiverInput {
  where: MessageWhereUniqueInput!
  update: MessageUpdateWithoutReceiverDataInput!
  create: MessageCreateWithoutReceiverInput!
}

input MessageUpsertWithWhereUniqueWithoutSenderInput {
  where: MessageWhereUniqueInput!
  update: MessageUpdateWithoutSenderDataInput!
  create: MessageCreateWithoutSenderInput!
}

input MessageWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  messageStr: String
  messageStr_not: String
  messageStr_in: [String!]
  messageStr_not_in: [String!]
  messageStr_lt: String
  messageStr_lte: String
  messageStr_gt: String
  messageStr_gte: String
  messageStr_contains: String
  messageStr_not_contains: String
  messageStr_starts_with: String
  messageStr_not_starts_with: String
  messageStr_ends_with: String
  messageStr_not_ends_with: String
  job: JobWhereInput
  sender: UserWhereInput
  receiver: UserWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  status: String
  status_not: String
  status_in: [String!]
  status_not_in: [String!]
  status_lt: String
  status_lte: String
  status_gt: String
  status_gte: String
  status_contains: String
  status_not_contains: String
  status_starts_with: String
  status_not_starts_with: String
  status_ends_with: String
  status_not_ends_with: String
  conversation: ConversationWhereInput
  AND: [MessageWhereInput!]
  OR: [MessageWhereInput!]
  NOT: [MessageWhereInput!]
}

input MessageWhereUniqueInput {
  id: ID
}

type Mutation {
  createContract(data: ContractCreateInput!): Contract!
  updateContract(data: ContractUpdateInput!, where: ContractWhereUniqueInput!): Contract
  updateManyContracts(data: ContractUpdateManyMutationInput!, where: ContractWhereInput): BatchPayload!
  upsertContract(where: ContractWhereUniqueInput!, create: ContractCreateInput!, update: ContractUpdateInput!): Contract!
  deleteContract(where: ContractWhereUniqueInput!): Contract
  deleteManyContracts(where: ContractWhereInput): BatchPayload!
  createConversation(data: ConversationCreateInput!): Conversation!
  updateConversation(data: ConversationUpdateInput!, where: ConversationWhereUniqueInput!): Conversation
  updateManyConversations(data: ConversationUpdateManyMutationInput!, where: ConversationWhereInput): BatchPayload!
  upsertConversation(where: ConversationWhereUniqueInput!, create: ConversationCreateInput!, update: ConversationUpdateInput!): Conversation!
  deleteConversation(where: ConversationWhereUniqueInput!): Conversation
  deleteManyConversations(where: ConversationWhereInput): BatchPayload!
  createCount(data: CountCreateInput!): Count!
  updateCount(data: CountUpdateInput!, where: CountWhereUniqueInput!): Count
  updateManyCounts(data: CountUpdateManyMutationInput!, where: CountWhereInput): BatchPayload!
  upsertCount(where: CountWhereUniqueInput!, create: CountCreateInput!, update: CountUpdateInput!): Count!
  deleteCount(where: CountWhereUniqueInput!): Count
  deleteManyCounts(where: CountWhereInput): BatchPayload!
  createGallery(data: GalleryCreateInput!): Gallery!
  updateGallery(data: GalleryUpdateInput!, where: GalleryWhereUniqueInput!): Gallery
  updateManyGalleries(data: GalleryUpdateManyMutationInput!, where: GalleryWhereInput): BatchPayload!
  upsertGallery(where: GalleryWhereUniqueInput!, create: GalleryCreateInput!, update: GalleryUpdateInput!): Gallery!
  deleteGallery(where: GalleryWhereUniqueInput!): Gallery
  deleteManyGalleries(where: GalleryWhereInput): BatchPayload!
  createGalleryImage(data: GalleryImageCreateInput!): GalleryImage!
  updateGalleryImage(data: GalleryImageUpdateInput!, where: GalleryImageWhereUniqueInput!): GalleryImage
  updateManyGalleryImages(data: GalleryImageUpdateManyMutationInput!, where: GalleryImageWhereInput): BatchPayload!
  upsertGalleryImage(where: GalleryImageWhereUniqueInput!, create: GalleryImageCreateInput!, update: GalleryImageUpdateInput!): GalleryImage!
  deleteGalleryImage(where: GalleryImageWhereUniqueInput!): GalleryImage
  deleteManyGalleryImages(where: GalleryImageWhereInput): BatchPayload!
  createGame(data: GameCreateInput!): Game!
  updateGame(data: GameUpdateInput!, where: GameWhereUniqueInput!): Game
  updateManyGames(data: GameUpdateManyMutationInput!, where: GameWhereInput): BatchPayload!
  upsertGame(where: GameWhereUniqueInput!, create: GameCreateInput!, update: GameUpdateInput!): Game!
  deleteGame(where: GameWhereUniqueInput!): Game
  deleteManyGames(where: GameWhereInput): BatchPayload!
  createInvite(data: InviteCreateInput!): Invite!
  updateInvite(data: InviteUpdateInput!, where: InviteWhereUniqueInput!): Invite
  updateManyInvites(data: InviteUpdateManyMutationInput!, where: InviteWhereInput): BatchPayload!
  upsertInvite(where: InviteWhereUniqueInput!, create: InviteCreateInput!, update: InviteUpdateInput!): Invite!
  deleteInvite(where: InviteWhereUniqueInput!): Invite
  deleteManyInvites(where: InviteWhereInput): BatchPayload!
  createJob(data: JobCreateInput!): Job!
  updateJob(data: JobUpdateInput!, where: JobWhereUniqueInput!): Job
  updateManyJobs(data: JobUpdateManyMutationInput!, where: JobWhereInput): BatchPayload!
  upsertJob(where: JobWhereUniqueInput!, create: JobCreateInput!, update: JobUpdateInput!): Job!
  deleteJob(where: JobWhereUniqueInput!): Job
  deleteManyJobs(where: JobWhereInput): BatchPayload!
  createMessage(data: MessageCreateInput!): Message!
  updateMessage(data: MessageUpdateInput!, where: MessageWhereUniqueInput!): Message
  updateManyMessages(data: MessageUpdateManyMutationInput!, where: MessageWhereInput): BatchPayload!
  upsertMessage(where: MessageWhereUniqueInput!, create: MessageCreateInput!, update: MessageUpdateInput!): Message!
  deleteMessage(where: MessageWhereUniqueInput!): Message
  deleteManyMessages(where: MessageWhereInput): BatchPayload!
  createNotableProjects(data: NotableProjectsCreateInput!): NotableProjects!
  updateNotableProjects(data: NotableProjectsUpdateInput!, where: NotableProjectsWhereUniqueInput!): NotableProjects
  updateManyNotableProjectses(data: NotableProjectsUpdateManyMutationInput!, where: NotableProjectsWhereInput): BatchPayload!
  upsertNotableProjects(where: NotableProjectsWhereUniqueInput!, create: NotableProjectsCreateInput!, update: NotableProjectsUpdateInput!): NotableProjects!
  deleteNotableProjects(where: NotableProjectsWhereUniqueInput!): NotableProjects
  deleteManyNotableProjectses(where: NotableProjectsWhereInput): BatchPayload!
  createNotification(data: NotificationCreateInput!): Notification!
  updateNotification(data: NotificationUpdateInput!, where: NotificationWhereUniqueInput!): Notification
  updateManyNotifications(data: NotificationUpdateManyMutationInput!, where: NotificationWhereInput): BatchPayload!
  upsertNotification(where: NotificationWhereUniqueInput!, create: NotificationCreateInput!, update: NotificationUpdateInput!): Notification!
  deleteNotification(where: NotificationWhereUniqueInput!): Notification
  deleteManyNotifications(where: NotificationWhereInput): BatchPayload!
  createPaymentTerm(data: PaymentTermCreateInput!): PaymentTerm!
  updatePaymentTerm(data: PaymentTermUpdateInput!, where: PaymentTermWhereUniqueInput!): PaymentTerm
  updateManyPaymentTerms(data: PaymentTermUpdateManyMutationInput!, where: PaymentTermWhereInput): BatchPayload!
  upsertPaymentTerm(where: PaymentTermWhereUniqueInput!, create: PaymentTermCreateInput!, update: PaymentTermUpdateInput!): PaymentTerm!
  deletePaymentTerm(where: PaymentTermWhereUniqueInput!): PaymentTerm
  deleteManyPaymentTerms(where: PaymentTermWhereInput): BatchPayload!
  createSection(data: SectionCreateInput!): Section!
  updateSection(data: SectionUpdateInput!, where: SectionWhereUniqueInput!): Section
  updateManySections(data: SectionUpdateManyMutationInput!, where: SectionWhereInput): BatchPayload!
  upsertSection(where: SectionWhereUniqueInput!, create: SectionCreateInput!, update: SectionUpdateInput!): Section!
  deleteSection(where: SectionWhereUniqueInput!): Section
  deleteManySections(where: SectionWhereInput): BatchPayload!
  createTestimonial(data: TestimonialCreateInput!): Testimonial!
  updateTestimonial(data: TestimonialUpdateInput!, where: TestimonialWhereUniqueInput!): Testimonial
  updateManyTestimonials(data: TestimonialUpdateManyMutationInput!, where: TestimonialWhereInput): BatchPayload!
  upsertTestimonial(where: TestimonialWhereUniqueInput!, create: TestimonialCreateInput!, update: TestimonialUpdateInput!): Testimonial!
  deleteTestimonial(where: TestimonialWhereUniqueInput!): Testimonial
  deleteManyTestimonials(where: TestimonialWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type NotableProjects {
  id: ID!
  summary: String
  image: String
  name: String
}

type NotableProjectsConnection {
  pageInfo: PageInfo!
  edges: [NotableProjectsEdge]!
  aggregate: AggregateNotableProjects!
}

input NotableProjectsCreateInput {
  id: ID
  summary: String
  image: String
  name: String
}

input NotableProjectsCreateManyInput {
  create: [NotableProjectsCreateInput!]
  connect: [NotableProjectsWhereUniqueInput!]
}

type NotableProjectsEdge {
  node: NotableProjects!
  cursor: String!
}

enum NotableProjectsOrderByInput {
  id_ASC
  id_DESC
  summary_ASC
  summary_DESC
  image_ASC
  image_DESC
  name_ASC
  name_DESC
}

type NotableProjectsPreviousValues {
  id: ID!
  summary: String
  image: String
  name: String
}

input NotableProjectsScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  AND: [NotableProjectsScalarWhereInput!]
  OR: [NotableProjectsScalarWhereInput!]
  NOT: [NotableProjectsScalarWhereInput!]
}

type NotableProjectsSubscriptionPayload {
  mutation: MutationType!
  node: NotableProjects
  updatedFields: [String!]
  previousValues: NotableProjectsPreviousValues
}

input NotableProjectsSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: NotableProjectsWhereInput
  AND: [NotableProjectsSubscriptionWhereInput!]
  OR: [NotableProjectsSubscriptionWhereInput!]
  NOT: [NotableProjectsSubscriptionWhereInput!]
}

input NotableProjectsUpdateDataInput {
  summary: String
  image: String
  name: String
}

input NotableProjectsUpdateInput {
  summary: String
  image: String
  name: String
}

input NotableProjectsUpdateManyDataInput {
  summary: String
  image: String
  name: String
}

input NotableProjectsUpdateManyInput {
  create: [NotableProjectsCreateInput!]
  update: [NotableProjectsUpdateWithWhereUniqueNestedInput!]
  upsert: [NotableProjectsUpsertWithWhereUniqueNestedInput!]
  delete: [NotableProjectsWhereUniqueInput!]
  connect: [NotableProjectsWhereUniqueInput!]
  set: [NotableProjectsWhereUniqueInput!]
  disconnect: [NotableProjectsWhereUniqueInput!]
  deleteMany: [NotableProjectsScalarWhereInput!]
  updateMany: [NotableProjectsUpdateManyWithWhereNestedInput!]
}

input NotableProjectsUpdateManyMutationInput {
  summary: String
  image: String
  name: String
}

input NotableProjectsUpdateManyWithWhereNestedInput {
  where: NotableProjectsScalarWhereInput!
  data: NotableProjectsUpdateManyDataInput!
}

input NotableProjectsUpdateWithWhereUniqueNestedInput {
  where: NotableProjectsWhereUniqueInput!
  data: NotableProjectsUpdateDataInput!
}

input NotableProjectsUpsertWithWhereUniqueNestedInput {
  where: NotableProjectsWhereUniqueInput!
  update: NotableProjectsUpdateDataInput!
  create: NotableProjectsCreateInput!
}

input NotableProjectsWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  AND: [NotableProjectsWhereInput!]
  OR: [NotableProjectsWhereInput!]
  NOT: [NotableProjectsWhereInput!]
}

input NotableProjectsWhereUniqueInput {
  id: ID
}

type Notification {
  id: ID!
  title: String!
  message: String!
  discarded: Boolean
  linkTo: String
  icon: String!
  createdAt: DateTime!
  user: User!
}

type NotificationConnection {
  pageInfo: PageInfo!
  edges: [NotificationEdge]!
  aggregate: AggregateNotification!
}

input NotificationCreateInput {
  id: ID
  title: String!
  message: String!
  discarded: Boolean
  linkTo: String
  icon: String!
  user: UserCreateOneWithoutNotificationsInput!
}

input NotificationCreateManyWithoutUserInput {
  create: [NotificationCreateWithoutUserInput!]
  connect: [NotificationWhereUniqueInput!]
}

input NotificationCreateWithoutUserInput {
  id: ID
  title: String!
  message: String!
  discarded: Boolean
  linkTo: String
  icon: String!
}

type NotificationEdge {
  node: Notification!
  cursor: String!
}

enum NotificationOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  message_ASC
  message_DESC
  discarded_ASC
  discarded_DESC
  linkTo_ASC
  linkTo_DESC
  icon_ASC
  icon_DESC
  createdAt_ASC
  createdAt_DESC
}

type NotificationPreviousValues {
  id: ID!
  title: String!
  message: String!
  discarded: Boolean
  linkTo: String
  icon: String!
  createdAt: DateTime!
}

input NotificationScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  message: String
  message_not: String
  message_in: [String!]
  message_not_in: [String!]
  message_lt: String
  message_lte: String
  message_gt: String
  message_gte: String
  message_contains: String
  message_not_contains: String
  message_starts_with: String
  message_not_starts_with: String
  message_ends_with: String
  message_not_ends_with: String
  discarded: Boolean
  discarded_not: Boolean
  linkTo: String
  linkTo_not: String
  linkTo_in: [String!]
  linkTo_not_in: [String!]
  linkTo_lt: String
  linkTo_lte: String
  linkTo_gt: String
  linkTo_gte: String
  linkTo_contains: String
  linkTo_not_contains: String
  linkTo_starts_with: String
  linkTo_not_starts_with: String
  linkTo_ends_with: String
  linkTo_not_ends_with: String
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [NotificationScalarWhereInput!]
  OR: [NotificationScalarWhereInput!]
  NOT: [NotificationScalarWhereInput!]
}

type NotificationSubscriptionPayload {
  mutation: MutationType!
  node: Notification
  updatedFields: [String!]
  previousValues: NotificationPreviousValues
}

input NotificationSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: NotificationWhereInput
  AND: [NotificationSubscriptionWhereInput!]
  OR: [NotificationSubscriptionWhereInput!]
  NOT: [NotificationSubscriptionWhereInput!]
}

input NotificationUpdateInput {
  title: String
  message: String
  discarded: Boolean
  linkTo: String
  icon: String
  user: UserUpdateOneRequiredWithoutNotificationsInput
}

input NotificationUpdateManyDataInput {
  title: String
  message: String
  discarded: Boolean
  linkTo: String
  icon: String
}

input NotificationUpdateManyMutationInput {
  title: String
  message: String
  discarded: Boolean
  linkTo: String
  icon: String
}

input NotificationUpdateManyWithoutUserInput {
  create: [NotificationCreateWithoutUserInput!]
  delete: [NotificationWhereUniqueInput!]
  connect: [NotificationWhereUniqueInput!]
  set: [NotificationWhereUniqueInput!]
  disconnect: [NotificationWhereUniqueInput!]
  update: [NotificationUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [NotificationUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [NotificationScalarWhereInput!]
  updateMany: [NotificationUpdateManyWithWhereNestedInput!]
}

input NotificationUpdateManyWithWhereNestedInput {
  where: NotificationScalarWhereInput!
  data: NotificationUpdateManyDataInput!
}

input NotificationUpdateWithoutUserDataInput {
  title: String
  message: String
  discarded: Boolean
  linkTo: String
  icon: String
}

input NotificationUpdateWithWhereUniqueWithoutUserInput {
  where: NotificationWhereUniqueInput!
  data: NotificationUpdateWithoutUserDataInput!
}

input NotificationUpsertWithWhereUniqueWithoutUserInput {
  where: NotificationWhereUniqueInput!
  update: NotificationUpdateWithoutUserDataInput!
  create: NotificationCreateWithoutUserInput!
}

input NotificationWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  message: String
  message_not: String
  message_in: [String!]
  message_not_in: [String!]
  message_lt: String
  message_lte: String
  message_gt: String
  message_gte: String
  message_contains: String
  message_not_contains: String
  message_starts_with: String
  message_not_starts_with: String
  message_ends_with: String
  message_not_ends_with: String
  discarded: Boolean
  discarded_not: Boolean
  linkTo: String
  linkTo_not: String
  linkTo_in: [String!]
  linkTo_not_in: [String!]
  linkTo_lt: String
  linkTo_lte: String
  linkTo_gt: String
  linkTo_gte: String
  linkTo_contains: String
  linkTo_not_contains: String
  linkTo_starts_with: String
  linkTo_not_starts_with: String
  linkTo_ends_with: String
  linkTo_not_ends_with: String
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  user: UserWhereInput
  AND: [NotificationWhereInput!]
  OR: [NotificationWhereInput!]
  NOT: [NotificationWhereInput!]
}

input NotificationWhereUniqueInput {
  id: ID
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type PaymentTerm {
  id: ID!
  percent: Int
  description: String!
}

type PaymentTermConnection {
  pageInfo: PageInfo!
  edges: [PaymentTermEdge]!
  aggregate: AggregatePaymentTerm!
}

input PaymentTermCreateInput {
  id: ID
  percent: Int
  description: String!
}

input PaymentTermCreateManyInput {
  create: [PaymentTermCreateInput!]
  connect: [PaymentTermWhereUniqueInput!]
}

type PaymentTermEdge {
  node: PaymentTerm!
  cursor: String!
}

enum PaymentTermOrderByInput {
  id_ASC
  id_DESC
  percent_ASC
  percent_DESC
  description_ASC
  description_DESC
}

type PaymentTermPreviousValues {
  id: ID!
  percent: Int
  description: String!
}

input PaymentTermScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  percent: Int
  percent_not: Int
  percent_in: [Int!]
  percent_not_in: [Int!]
  percent_lt: Int
  percent_lte: Int
  percent_gt: Int
  percent_gte: Int
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  AND: [PaymentTermScalarWhereInput!]
  OR: [PaymentTermScalarWhereInput!]
  NOT: [PaymentTermScalarWhereInput!]
}

type PaymentTermSubscriptionPayload {
  mutation: MutationType!
  node: PaymentTerm
  updatedFields: [String!]
  previousValues: PaymentTermPreviousValues
}

input PaymentTermSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PaymentTermWhereInput
  AND: [PaymentTermSubscriptionWhereInput!]
  OR: [PaymentTermSubscriptionWhereInput!]
  NOT: [PaymentTermSubscriptionWhereInput!]
}

input PaymentTermUpdateDataInput {
  percent: Int
  description: String
}

input PaymentTermUpdateInput {
  percent: Int
  description: String
}

input PaymentTermUpdateManyDataInput {
  percent: Int
  description: String
}

input PaymentTermUpdateManyInput {
  create: [PaymentTermCreateInput!]
  update: [PaymentTermUpdateWithWhereUniqueNestedInput!]
  upsert: [PaymentTermUpsertWithWhereUniqueNestedInput!]
  delete: [PaymentTermWhereUniqueInput!]
  connect: [PaymentTermWhereUniqueInput!]
  set: [PaymentTermWhereUniqueInput!]
  disconnect: [PaymentTermWhereUniqueInput!]
  deleteMany: [PaymentTermScalarWhereInput!]
  updateMany: [PaymentTermUpdateManyWithWhereNestedInput!]
}

input PaymentTermUpdateManyMutationInput {
  percent: Int
  description: String
}

input PaymentTermUpdateManyWithWhereNestedInput {
  where: PaymentTermScalarWhereInput!
  data: PaymentTermUpdateManyDataInput!
}

input PaymentTermUpdateWithWhereUniqueNestedInput {
  where: PaymentTermWhereUniqueInput!
  data: PaymentTermUpdateDataInput!
}

input PaymentTermUpsertWithWhereUniqueNestedInput {
  where: PaymentTermWhereUniqueInput!
  update: PaymentTermUpdateDataInput!
  create: PaymentTermCreateInput!
}

input PaymentTermWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  percent: Int
  percent_not: Int
  percent_in: [Int!]
  percent_not_in: [Int!]
  percent_lt: Int
  percent_lte: Int
  percent_gt: Int
  percent_gte: Int
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  AND: [PaymentTermWhereInput!]
  OR: [PaymentTermWhereInput!]
  NOT: [PaymentTermWhereInput!]
}

input PaymentTermWhereUniqueInput {
  id: ID
}

type Query {
  contract(where: ContractWhereUniqueInput!): Contract
  contracts(where: ContractWhereInput, orderBy: ContractOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Contract]!
  contractsConnection(where: ContractWhereInput, orderBy: ContractOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ContractConnection!
  conversation(where: ConversationWhereUniqueInput!): Conversation
  conversations(where: ConversationWhereInput, orderBy: ConversationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Conversation]!
  conversationsConnection(where: ConversationWhereInput, orderBy: ConversationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ConversationConnection!
  count(where: CountWhereUniqueInput!): Count
  counts(where: CountWhereInput, orderBy: CountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Count]!
  countsConnection(where: CountWhereInput, orderBy: CountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CountConnection!
  gallery(where: GalleryWhereUniqueInput!): Gallery
  galleries(where: GalleryWhereInput, orderBy: GalleryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Gallery]!
  galleriesConnection(where: GalleryWhereInput, orderBy: GalleryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GalleryConnection!
  galleryImage(where: GalleryImageWhereUniqueInput!): GalleryImage
  galleryImages(where: GalleryImageWhereInput, orderBy: GalleryImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GalleryImage]!
  galleryImagesConnection(where: GalleryImageWhereInput, orderBy: GalleryImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GalleryImageConnection!
  game(where: GameWhereUniqueInput!): Game
  games(where: GameWhereInput, orderBy: GameOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Game]!
  gamesConnection(where: GameWhereInput, orderBy: GameOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GameConnection!
  invite(where: InviteWhereUniqueInput!): Invite
  invites(where: InviteWhereInput, orderBy: InviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Invite]!
  invitesConnection(where: InviteWhereInput, orderBy: InviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): InviteConnection!
  job(where: JobWhereUniqueInput!): Job
  jobs(where: JobWhereInput, orderBy: JobOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Job]!
  jobsConnection(where: JobWhereInput, orderBy: JobOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): JobConnection!
  message(where: MessageWhereUniqueInput!): Message
  messages(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message]!
  messagesConnection(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MessageConnection!
  notableProjects(where: NotableProjectsWhereUniqueInput!): NotableProjects
  notableProjectses(where: NotableProjectsWhereInput, orderBy: NotableProjectsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [NotableProjects]!
  notableProjectsesConnection(where: NotableProjectsWhereInput, orderBy: NotableProjectsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): NotableProjectsConnection!
  notification(where: NotificationWhereUniqueInput!): Notification
  notifications(where: NotificationWhereInput, orderBy: NotificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Notification]!
  notificationsConnection(where: NotificationWhereInput, orderBy: NotificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): NotificationConnection!
  paymentTerm(where: PaymentTermWhereUniqueInput!): PaymentTerm
  paymentTerms(where: PaymentTermWhereInput, orderBy: PaymentTermOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PaymentTerm]!
  paymentTermsConnection(where: PaymentTermWhereInput, orderBy: PaymentTermOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PaymentTermConnection!
  section(where: SectionWhereUniqueInput!): Section
  sections(where: SectionWhereInput, orderBy: SectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Section]!
  sectionsConnection(where: SectionWhereInput, orderBy: SectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SectionConnection!
  testimonial(where: TestimonialWhereUniqueInput!): Testimonial
  testimonials(where: TestimonialWhereInput, orderBy: TestimonialOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Testimonial]!
  testimonialsConnection(where: TestimonialWhereInput, orderBy: TestimonialOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TestimonialConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  node(id: ID!): Node
}

type Section {
  id: ID!
  title: String
  summary: String
  gallery: Gallery
  notableProjects(where: NotableProjectsWhereInput, orderBy: NotableProjectsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [NotableProjects!]
  testimonials(where: TestimonialWhereInput, orderBy: TestimonialOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Testimonial!]
  showreel: String
  type: String
  user: User
}

type SectionConnection {
  pageInfo: PageInfo!
  edges: [SectionEdge]!
  aggregate: AggregateSection!
}

input SectionCreateInput {
  id: ID
  title: String
  summary: String
  gallery: GalleryCreateOneWithoutSectionInput
  notableProjects: NotableProjectsCreateManyInput
  testimonials: TestimonialCreateManyInput
  showreel: String
  type: String
  user: UserCreateOneWithoutSectionsInput
}

input SectionCreateManyWithoutUserInput {
  create: [SectionCreateWithoutUserInput!]
  connect: [SectionWhereUniqueInput!]
}

input SectionCreateOneWithoutGalleryInput {
  create: SectionCreateWithoutGalleryInput
  connect: SectionWhereUniqueInput
}

input SectionCreateWithoutGalleryInput {
  id: ID
  title: String
  summary: String
  notableProjects: NotableProjectsCreateManyInput
  testimonials: TestimonialCreateManyInput
  showreel: String
  type: String
  user: UserCreateOneWithoutSectionsInput
}

input SectionCreateWithoutUserInput {
  id: ID
  title: String
  summary: String
  gallery: GalleryCreateOneWithoutSectionInput
  notableProjects: NotableProjectsCreateManyInput
  testimonials: TestimonialCreateManyInput
  showreel: String
  type: String
}

type SectionEdge {
  node: Section!
  cursor: String!
}

enum SectionOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  summary_ASC
  summary_DESC
  showreel_ASC
  showreel_DESC
  type_ASC
  type_DESC
}

type SectionPreviousValues {
  id: ID!
  title: String
  summary: String
  showreel: String
  type: String
}

input SectionScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  showreel: String
  showreel_not: String
  showreel_in: [String!]
  showreel_not_in: [String!]
  showreel_lt: String
  showreel_lte: String
  showreel_gt: String
  showreel_gte: String
  showreel_contains: String
  showreel_not_contains: String
  showreel_starts_with: String
  showreel_not_starts_with: String
  showreel_ends_with: String
  showreel_not_ends_with: String
  type: String
  type_not: String
  type_in: [String!]
  type_not_in: [String!]
  type_lt: String
  type_lte: String
  type_gt: String
  type_gte: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  AND: [SectionScalarWhereInput!]
  OR: [SectionScalarWhereInput!]
  NOT: [SectionScalarWhereInput!]
}

type SectionSubscriptionPayload {
  mutation: MutationType!
  node: Section
  updatedFields: [String!]
  previousValues: SectionPreviousValues
}

input SectionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SectionWhereInput
  AND: [SectionSubscriptionWhereInput!]
  OR: [SectionSubscriptionWhereInput!]
  NOT: [SectionSubscriptionWhereInput!]
}

input SectionUpdateInput {
  title: String
  summary: String
  gallery: GalleryUpdateOneWithoutSectionInput
  notableProjects: NotableProjectsUpdateManyInput
  testimonials: TestimonialUpdateManyInput
  showreel: String
  type: String
  user: UserUpdateOneWithoutSectionsInput
}

input SectionUpdateManyDataInput {
  title: String
  summary: String
  showreel: String
  type: String
}

input SectionUpdateManyMutationInput {
  title: String
  summary: String
  showreel: String
  type: String
}

input SectionUpdateManyWithoutUserInput {
  create: [SectionCreateWithoutUserInput!]
  delete: [SectionWhereUniqueInput!]
  connect: [SectionWhereUniqueInput!]
  set: [SectionWhereUniqueInput!]
  disconnect: [SectionWhereUniqueInput!]
  update: [SectionUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [SectionUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [SectionScalarWhereInput!]
  updateMany: [SectionUpdateManyWithWhereNestedInput!]
}

input SectionUpdateManyWithWhereNestedInput {
  where: SectionScalarWhereInput!
  data: SectionUpdateManyDataInput!
}

input SectionUpdateOneWithoutGalleryInput {
  create: SectionCreateWithoutGalleryInput
  update: SectionUpdateWithoutGalleryDataInput
  upsert: SectionUpsertWithoutGalleryInput
  delete: Boolean
  disconnect: Boolean
  connect: SectionWhereUniqueInput
}

input SectionUpdateWithoutGalleryDataInput {
  title: String
  summary: String
  notableProjects: NotableProjectsUpdateManyInput
  testimonials: TestimonialUpdateManyInput
  showreel: String
  type: String
  user: UserUpdateOneWithoutSectionsInput
}

input SectionUpdateWithoutUserDataInput {
  title: String
  summary: String
  gallery: GalleryUpdateOneWithoutSectionInput
  notableProjects: NotableProjectsUpdateManyInput
  testimonials: TestimonialUpdateManyInput
  showreel: String
  type: String
}

input SectionUpdateWithWhereUniqueWithoutUserInput {
  where: SectionWhereUniqueInput!
  data: SectionUpdateWithoutUserDataInput!
}

input SectionUpsertWithoutGalleryInput {
  update: SectionUpdateWithoutGalleryDataInput!
  create: SectionCreateWithoutGalleryInput!
}

input SectionUpsertWithWhereUniqueWithoutUserInput {
  where: SectionWhereUniqueInput!
  update: SectionUpdateWithoutUserDataInput!
  create: SectionCreateWithoutUserInput!
}

input SectionWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  gallery: GalleryWhereInput
  notableProjects_every: NotableProjectsWhereInput
  notableProjects_some: NotableProjectsWhereInput
  notableProjects_none: NotableProjectsWhereInput
  testimonials_every: TestimonialWhereInput
  testimonials_some: TestimonialWhereInput
  testimonials_none: TestimonialWhereInput
  showreel: String
  showreel_not: String
  showreel_in: [String!]
  showreel_not_in: [String!]
  showreel_lt: String
  showreel_lte: String
  showreel_gt: String
  showreel_gte: String
  showreel_contains: String
  showreel_not_contains: String
  showreel_starts_with: String
  showreel_not_starts_with: String
  showreel_ends_with: String
  showreel_not_ends_with: String
  type: String
  type_not: String
  type_in: [String!]
  type_not_in: [String!]
  type_lt: String
  type_lte: String
  type_gt: String
  type_gte: String
  type_contains: String
  type_not_contains: String
  type_starts_with: String
  type_not_starts_with: String
  type_ends_with: String
  type_not_ends_with: String
  user: UserWhereInput
  AND: [SectionWhereInput!]
  OR: [SectionWhereInput!]
  NOT: [SectionWhereInput!]
}

input SectionWhereUniqueInput {
  id: ID
}

type Subscription {
  contract(where: ContractSubscriptionWhereInput): ContractSubscriptionPayload
  conversation(where: ConversationSubscriptionWhereInput): ConversationSubscriptionPayload
  count(where: CountSubscriptionWhereInput): CountSubscriptionPayload
  gallery(where: GallerySubscriptionWhereInput): GallerySubscriptionPayload
  galleryImage(where: GalleryImageSubscriptionWhereInput): GalleryImageSubscriptionPayload
  game(where: GameSubscriptionWhereInput): GameSubscriptionPayload
  invite(where: InviteSubscriptionWhereInput): InviteSubscriptionPayload
  job(where: JobSubscriptionWhereInput): JobSubscriptionPayload
  message(where: MessageSubscriptionWhereInput): MessageSubscriptionPayload
  notableProjects(where: NotableProjectsSubscriptionWhereInput): NotableProjectsSubscriptionPayload
  notification(where: NotificationSubscriptionWhereInput): NotificationSubscriptionPayload
  paymentTerm(where: PaymentTermSubscriptionWhereInput): PaymentTermSubscriptionPayload
  section(where: SectionSubscriptionWhereInput): SectionSubscriptionPayload
  testimonial(where: TestimonialSubscriptionWhereInput): TestimonialSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type Testimonial {
  id: ID!
  summary: String
  image: String
  name: String
  status: Boolean
}

type TestimonialConnection {
  pageInfo: PageInfo!
  edges: [TestimonialEdge]!
  aggregate: AggregateTestimonial!
}

input TestimonialCreateInput {
  id: ID
  summary: String
  image: String
  name: String
  status: Boolean
}

input TestimonialCreateManyInput {
  create: [TestimonialCreateInput!]
  connect: [TestimonialWhereUniqueInput!]
}

type TestimonialEdge {
  node: Testimonial!
  cursor: String!
}

enum TestimonialOrderByInput {
  id_ASC
  id_DESC
  summary_ASC
  summary_DESC
  image_ASC
  image_DESC
  name_ASC
  name_DESC
  status_ASC
  status_DESC
}

type TestimonialPreviousValues {
  id: ID!
  summary: String
  image: String
  name: String
  status: Boolean
}

input TestimonialScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  status: Boolean
  status_not: Boolean
  AND: [TestimonialScalarWhereInput!]
  OR: [TestimonialScalarWhereInput!]
  NOT: [TestimonialScalarWhereInput!]
}

type TestimonialSubscriptionPayload {
  mutation: MutationType!
  node: Testimonial
  updatedFields: [String!]
  previousValues: TestimonialPreviousValues
}

input TestimonialSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TestimonialWhereInput
  AND: [TestimonialSubscriptionWhereInput!]
  OR: [TestimonialSubscriptionWhereInput!]
  NOT: [TestimonialSubscriptionWhereInput!]
}

input TestimonialUpdateDataInput {
  summary: String
  image: String
  name: String
  status: Boolean
}

input TestimonialUpdateInput {
  summary: String
  image: String
  name: String
  status: Boolean
}

input TestimonialUpdateManyDataInput {
  summary: String
  image: String
  name: String
  status: Boolean
}

input TestimonialUpdateManyInput {
  create: [TestimonialCreateInput!]
  update: [TestimonialUpdateWithWhereUniqueNestedInput!]
  upsert: [TestimonialUpsertWithWhereUniqueNestedInput!]
  delete: [TestimonialWhereUniqueInput!]
  connect: [TestimonialWhereUniqueInput!]
  set: [TestimonialWhereUniqueInput!]
  disconnect: [TestimonialWhereUniqueInput!]
  deleteMany: [TestimonialScalarWhereInput!]
  updateMany: [TestimonialUpdateManyWithWhereNestedInput!]
}

input TestimonialUpdateManyMutationInput {
  summary: String
  image: String
  name: String
  status: Boolean
}

input TestimonialUpdateManyWithWhereNestedInput {
  where: TestimonialScalarWhereInput!
  data: TestimonialUpdateManyDataInput!
}

input TestimonialUpdateWithWhereUniqueNestedInput {
  where: TestimonialWhereUniqueInput!
  data: TestimonialUpdateDataInput!
}

input TestimonialUpsertWithWhereUniqueNestedInput {
  where: TestimonialWhereUniqueInput!
  update: TestimonialUpdateDataInput!
  create: TestimonialCreateInput!
}

input TestimonialWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  status: Boolean
  status_not: Boolean
  AND: [TestimonialWhereInput!]
  OR: [TestimonialWhereInput!]
  NOT: [TestimonialWhereInput!]
}

input TestimonialWhereUniqueInput {
  id: ID
}

type User {
  id: ID!
  name: String!
  email: String!
  resetToken: String
  password: String!
  keywords: [String!]!
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: [String!]!
  img: String
  sections(where: SectionWhereInput, orderBy: SectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Section!]
  notifications(where: NotificationWhereInput, orderBy: NotificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Notification!]
  games(where: GameWhereInput, orderBy: GameOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Game!]
  conversations(where: ConversationWhereInput, orderBy: ConversationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Conversation!]
  jobs(where: JobWhereInput, orderBy: JobOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Job!]
  invites(where: InviteWhereInput, orderBy: InviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Invite!]
  invitesReceived(where: InviteWhereInput, orderBy: InviteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Invite!]
  messagesSent(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message!]
  messagesReceived(where: MessageWhereInput, orderBy: MessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Message!]
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreatefavouritesInput {
  set: [String!]
}

input UserCreateInput {
  id: ID
  name: String!
  email: String!
  resetToken: String
  password: String!
  keywords: UserCreatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserCreatefavouritesInput
  img: String
  sections: SectionCreateManyWithoutUserInput
  notifications: NotificationCreateManyWithoutUserInput
  games: GameCreateManyWithoutUserInput
  conversations: ConversationCreateManyWithoutParticipantsInput
  jobs: JobCreateManyWithoutUserInput
  invites: InviteCreateManyWithoutUserInput
  invitesReceived: InviteCreateManyWithoutReceiverInput
  messagesSent: MessageCreateManyWithoutSenderInput
  messagesReceived: MessageCreateManyWithoutReceiverInput
}

input UserCreatekeywordsInput {
  set: [String!]
}

input UserCreateManyWithoutConversationsInput {
  create: [UserCreateWithoutConversationsInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneWithoutGamesInput {
  create: UserCreateWithoutGamesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutInvitesInput {
  create: UserCreateWithoutInvitesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutInvitesReceivedInput {
  create: UserCreateWithoutInvitesReceivedInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutJobsInput {
  create: UserCreateWithoutJobsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutMessagesReceivedInput {
  create: UserCreateWithoutMessagesReceivedInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutMessagesSentInput {
  create: UserCreateWithoutMessagesSentInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutNotificationsInput {
  create: UserCreateWithoutNotificationsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutSectionsInput {
  create: UserCreateWithoutSectionsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutConversationsInput {
  id: ID
  name: String!
  email: String!
  resetToken: String
  password: String!
  keywords: UserCreatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserCreatefavouritesInput
  img: String
  sections: SectionCreateManyWithoutUserInput
  notifications: NotificationCreateManyWithoutUserInput
  games: GameCreateManyWithoutUserInput
  jobs: JobCreateManyWithoutUserInput
  invites: InviteCreateManyWithoutUserInput
  invitesReceived: InviteCreateManyWithoutReceiverInput
  messagesSent: MessageCreateManyWithoutSenderInput
  messagesReceived: MessageCreateManyWithoutReceiverInput
}

input UserCreateWithoutGamesInput {
  id: ID
  name: String!
  email: String!
  resetToken: String
  password: String!
  keywords: UserCreatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserCreatefavouritesInput
  img: String
  sections: SectionCreateManyWithoutUserInput
  notifications: NotificationCreateManyWithoutUserInput
  conversations: ConversationCreateManyWithoutParticipantsInput
  jobs: JobCreateManyWithoutUserInput
  invites: InviteCreateManyWithoutUserInput
  invitesReceived: InviteCreateManyWithoutReceiverInput
  messagesSent: MessageCreateManyWithoutSenderInput
  messagesReceived: MessageCreateManyWithoutReceiverInput
}

input UserCreateWithoutInvitesInput {
  id: ID
  name: String!
  email: String!
  resetToken: String
  password: String!
  keywords: UserCreatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserCreatefavouritesInput
  img: String
  sections: SectionCreateManyWithoutUserInput
  notifications: NotificationCreateManyWithoutUserInput
  games: GameCreateManyWithoutUserInput
  conversations: ConversationCreateManyWithoutParticipantsInput
  jobs: JobCreateManyWithoutUserInput
  invitesReceived: InviteCreateManyWithoutReceiverInput
  messagesSent: MessageCreateManyWithoutSenderInput
  messagesReceived: MessageCreateManyWithoutReceiverInput
}

input UserCreateWithoutInvitesReceivedInput {
  id: ID
  name: String!
  email: String!
  resetToken: String
  password: String!
  keywords: UserCreatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserCreatefavouritesInput
  img: String
  sections: SectionCreateManyWithoutUserInput
  notifications: NotificationCreateManyWithoutUserInput
  games: GameCreateManyWithoutUserInput
  conversations: ConversationCreateManyWithoutParticipantsInput
  jobs: JobCreateManyWithoutUserInput
  invites: InviteCreateManyWithoutUserInput
  messagesSent: MessageCreateManyWithoutSenderInput
  messagesReceived: MessageCreateManyWithoutReceiverInput
}

input UserCreateWithoutJobsInput {
  id: ID
  name: String!
  email: String!
  resetToken: String
  password: String!
  keywords: UserCreatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserCreatefavouritesInput
  img: String
  sections: SectionCreateManyWithoutUserInput
  notifications: NotificationCreateManyWithoutUserInput
  games: GameCreateManyWithoutUserInput
  conversations: ConversationCreateManyWithoutParticipantsInput
  invites: InviteCreateManyWithoutUserInput
  invitesReceived: InviteCreateManyWithoutReceiverInput
  messagesSent: MessageCreateManyWithoutSenderInput
  messagesReceived: MessageCreateManyWithoutReceiverInput
}

input UserCreateWithoutMessagesReceivedInput {
  id: ID
  name: String!
  email: String!
  resetToken: String
  password: String!
  keywords: UserCreatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserCreatefavouritesInput
  img: String
  sections: SectionCreateManyWithoutUserInput
  notifications: NotificationCreateManyWithoutUserInput
  games: GameCreateManyWithoutUserInput
  conversations: ConversationCreateManyWithoutParticipantsInput
  jobs: JobCreateManyWithoutUserInput
  invites: InviteCreateManyWithoutUserInput
  invitesReceived: InviteCreateManyWithoutReceiverInput
  messagesSent: MessageCreateManyWithoutSenderInput
}

input UserCreateWithoutMessagesSentInput {
  id: ID
  name: String!
  email: String!
  resetToken: String
  password: String!
  keywords: UserCreatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserCreatefavouritesInput
  img: String
  sections: SectionCreateManyWithoutUserInput
  notifications: NotificationCreateManyWithoutUserInput
  games: GameCreateManyWithoutUserInput
  conversations: ConversationCreateManyWithoutParticipantsInput
  jobs: JobCreateManyWithoutUserInput
  invites: InviteCreateManyWithoutUserInput
  invitesReceived: InviteCreateManyWithoutReceiverInput
  messagesReceived: MessageCreateManyWithoutReceiverInput
}

input UserCreateWithoutNotificationsInput {
  id: ID
  name: String!
  email: String!
  resetToken: String
  password: String!
  keywords: UserCreatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserCreatefavouritesInput
  img: String
  sections: SectionCreateManyWithoutUserInput
  games: GameCreateManyWithoutUserInput
  conversations: ConversationCreateManyWithoutParticipantsInput
  jobs: JobCreateManyWithoutUserInput
  invites: InviteCreateManyWithoutUserInput
  invitesReceived: InviteCreateManyWithoutReceiverInput
  messagesSent: MessageCreateManyWithoutSenderInput
  messagesReceived: MessageCreateManyWithoutReceiverInput
}

input UserCreateWithoutSectionsInput {
  id: ID
  name: String!
  email: String!
  resetToken: String
  password: String!
  keywords: UserCreatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserCreatefavouritesInput
  img: String
  notifications: NotificationCreateManyWithoutUserInput
  games: GameCreateManyWithoutUserInput
  conversations: ConversationCreateManyWithoutParticipantsInput
  jobs: JobCreateManyWithoutUserInput
  invites: InviteCreateManyWithoutUserInput
  invitesReceived: InviteCreateManyWithoutReceiverInput
  messagesSent: MessageCreateManyWithoutSenderInput
  messagesReceived: MessageCreateManyWithoutReceiverInput
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  resetToken_ASC
  resetToken_DESC
  password_ASC
  password_DESC
  profileImg_ASC
  profileImg_DESC
  profileImgStyle_ASC
  profileImgStyle_DESC
  profileBG_ASC
  profileBG_DESC
  profileBGStyle_ASC
  profileBGStyle_DESC
  autosave_ASC
  autosave_DESC
  summary_ASC
  summary_DESC
  location_ASC
  location_DESC
  img_ASC
  img_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  resetToken: String
  password: String!
  keywords: [String!]!
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: [String!]!
  img: String
}

input UserScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  resetToken: String
  resetToken_not: String
  resetToken_in: [String!]
  resetToken_not_in: [String!]
  resetToken_lt: String
  resetToken_lte: String
  resetToken_gt: String
  resetToken_gte: String
  resetToken_contains: String
  resetToken_not_contains: String
  resetToken_starts_with: String
  resetToken_not_starts_with: String
  resetToken_ends_with: String
  resetToken_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  profileImg: String
  profileImg_not: String
  profileImg_in: [String!]
  profileImg_not_in: [String!]
  profileImg_lt: String
  profileImg_lte: String
  profileImg_gt: String
  profileImg_gte: String
  profileImg_contains: String
  profileImg_not_contains: String
  profileImg_starts_with: String
  profileImg_not_starts_with: String
  profileImg_ends_with: String
  profileImg_not_ends_with: String
  profileImgStyle: String
  profileImgStyle_not: String
  profileImgStyle_in: [String!]
  profileImgStyle_not_in: [String!]
  profileImgStyle_lt: String
  profileImgStyle_lte: String
  profileImgStyle_gt: String
  profileImgStyle_gte: String
  profileImgStyle_contains: String
  profileImgStyle_not_contains: String
  profileImgStyle_starts_with: String
  profileImgStyle_not_starts_with: String
  profileImgStyle_ends_with: String
  profileImgStyle_not_ends_with: String
  profileBG: String
  profileBG_not: String
  profileBG_in: [String!]
  profileBG_not_in: [String!]
  profileBG_lt: String
  profileBG_lte: String
  profileBG_gt: String
  profileBG_gte: String
  profileBG_contains: String
  profileBG_not_contains: String
  profileBG_starts_with: String
  profileBG_not_starts_with: String
  profileBG_ends_with: String
  profileBG_not_ends_with: String
  profileBGStyle: String
  profileBGStyle_not: String
  profileBGStyle_in: [String!]
  profileBGStyle_not_in: [String!]
  profileBGStyle_lt: String
  profileBGStyle_lte: String
  profileBGStyle_gt: String
  profileBGStyle_gte: String
  profileBGStyle_contains: String
  profileBGStyle_not_contains: String
  profileBGStyle_starts_with: String
  profileBGStyle_not_starts_with: String
  profileBGStyle_ends_with: String
  profileBGStyle_not_ends_with: String
  autosave: Boolean
  autosave_not: Boolean
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  img: String
  img_not: String
  img_in: [String!]
  img_not_in: [String!]
  img_lt: String
  img_lte: String
  img_gt: String
  img_gte: String
  img_contains: String
  img_not_contains: String
  img_starts_with: String
  img_not_starts_with: String
  img_ends_with: String
  img_not_ends_with: String
  AND: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  NOT: [UserScalarWhereInput!]
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdatefavouritesInput {
  set: [String!]
}

input UserUpdateInput {
  name: String
  email: String
  resetToken: String
  password: String
  keywords: UserUpdatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserUpdatefavouritesInput
  img: String
  sections: SectionUpdateManyWithoutUserInput
  notifications: NotificationUpdateManyWithoutUserInput
  games: GameUpdateManyWithoutUserInput
  conversations: ConversationUpdateManyWithoutParticipantsInput
  jobs: JobUpdateManyWithoutUserInput
  invites: InviteUpdateManyWithoutUserInput
  invitesReceived: InviteUpdateManyWithoutReceiverInput
  messagesSent: MessageUpdateManyWithoutSenderInput
  messagesReceived: MessageUpdateManyWithoutReceiverInput
}

input UserUpdatekeywordsInput {
  set: [String!]
}

input UserUpdateManyDataInput {
  name: String
  email: String
  resetToken: String
  password: String
  keywords: UserUpdatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserUpdatefavouritesInput
  img: String
}

input UserUpdateManyMutationInput {
  name: String
  email: String
  resetToken: String
  password: String
  keywords: UserUpdatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserUpdatefavouritesInput
  img: String
}

input UserUpdateManyWithoutConversationsInput {
  create: [UserCreateWithoutConversationsInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutConversationsInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutConversationsInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyWithWhereNestedInput {
  where: UserScalarWhereInput!
  data: UserUpdateManyDataInput!
}

input UserUpdateOneRequiredWithoutGamesInput {
  create: UserCreateWithoutGamesInput
  update: UserUpdateWithoutGamesDataInput
  upsert: UserUpsertWithoutGamesInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutInvitesInput {
  create: UserCreateWithoutInvitesInput
  update: UserUpdateWithoutInvitesDataInput
  upsert: UserUpsertWithoutInvitesInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutInvitesReceivedInput {
  create: UserCreateWithoutInvitesReceivedInput
  update: UserUpdateWithoutInvitesReceivedDataInput
  upsert: UserUpsertWithoutInvitesReceivedInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutJobsInput {
  create: UserCreateWithoutJobsInput
  update: UserUpdateWithoutJobsDataInput
  upsert: UserUpsertWithoutJobsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutMessagesSentInput {
  create: UserCreateWithoutMessagesSentInput
  update: UserUpdateWithoutMessagesSentDataInput
  upsert: UserUpsertWithoutMessagesSentInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutNotificationsInput {
  create: UserCreateWithoutNotificationsInput
  update: UserUpdateWithoutNotificationsDataInput
  upsert: UserUpsertWithoutNotificationsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutMessagesReceivedInput {
  create: UserCreateWithoutMessagesReceivedInput
  update: UserUpdateWithoutMessagesReceivedDataInput
  upsert: UserUpsertWithoutMessagesReceivedInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutSectionsInput {
  create: UserCreateWithoutSectionsInput
  update: UserUpdateWithoutSectionsDataInput
  upsert: UserUpsertWithoutSectionsInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateWithoutConversationsDataInput {
  name: String
  email: String
  resetToken: String
  password: String
  keywords: UserUpdatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserUpdatefavouritesInput
  img: String
  sections: SectionUpdateManyWithoutUserInput
  notifications: NotificationUpdateManyWithoutUserInput
  games: GameUpdateManyWithoutUserInput
  jobs: JobUpdateManyWithoutUserInput
  invites: InviteUpdateManyWithoutUserInput
  invitesReceived: InviteUpdateManyWithoutReceiverInput
  messagesSent: MessageUpdateManyWithoutSenderInput
  messagesReceived: MessageUpdateManyWithoutReceiverInput
}

input UserUpdateWithoutGamesDataInput {
  name: String
  email: String
  resetToken: String
  password: String
  keywords: UserUpdatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserUpdatefavouritesInput
  img: String
  sections: SectionUpdateManyWithoutUserInput
  notifications: NotificationUpdateManyWithoutUserInput
  conversations: ConversationUpdateManyWithoutParticipantsInput
  jobs: JobUpdateManyWithoutUserInput
  invites: InviteUpdateManyWithoutUserInput
  invitesReceived: InviteUpdateManyWithoutReceiverInput
  messagesSent: MessageUpdateManyWithoutSenderInput
  messagesReceived: MessageUpdateManyWithoutReceiverInput
}

input UserUpdateWithoutInvitesDataInput {
  name: String
  email: String
  resetToken: String
  password: String
  keywords: UserUpdatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserUpdatefavouritesInput
  img: String
  sections: SectionUpdateManyWithoutUserInput
  notifications: NotificationUpdateManyWithoutUserInput
  games: GameUpdateManyWithoutUserInput
  conversations: ConversationUpdateManyWithoutParticipantsInput
  jobs: JobUpdateManyWithoutUserInput
  invitesReceived: InviteUpdateManyWithoutReceiverInput
  messagesSent: MessageUpdateManyWithoutSenderInput
  messagesReceived: MessageUpdateManyWithoutReceiverInput
}

input UserUpdateWithoutInvitesReceivedDataInput {
  name: String
  email: String
  resetToken: String
  password: String
  keywords: UserUpdatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserUpdatefavouritesInput
  img: String
  sections: SectionUpdateManyWithoutUserInput
  notifications: NotificationUpdateManyWithoutUserInput
  games: GameUpdateManyWithoutUserInput
  conversations: ConversationUpdateManyWithoutParticipantsInput
  jobs: JobUpdateManyWithoutUserInput
  invites: InviteUpdateManyWithoutUserInput
  messagesSent: MessageUpdateManyWithoutSenderInput
  messagesReceived: MessageUpdateManyWithoutReceiverInput
}

input UserUpdateWithoutJobsDataInput {
  name: String
  email: String
  resetToken: String
  password: String
  keywords: UserUpdatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserUpdatefavouritesInput
  img: String
  sections: SectionUpdateManyWithoutUserInput
  notifications: NotificationUpdateManyWithoutUserInput
  games: GameUpdateManyWithoutUserInput
  conversations: ConversationUpdateManyWithoutParticipantsInput
  invites: InviteUpdateManyWithoutUserInput
  invitesReceived: InviteUpdateManyWithoutReceiverInput
  messagesSent: MessageUpdateManyWithoutSenderInput
  messagesReceived: MessageUpdateManyWithoutReceiverInput
}

input UserUpdateWithoutMessagesReceivedDataInput {
  name: String
  email: String
  resetToken: String
  password: String
  keywords: UserUpdatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserUpdatefavouritesInput
  img: String
  sections: SectionUpdateManyWithoutUserInput
  notifications: NotificationUpdateManyWithoutUserInput
  games: GameUpdateManyWithoutUserInput
  conversations: ConversationUpdateManyWithoutParticipantsInput
  jobs: JobUpdateManyWithoutUserInput
  invites: InviteUpdateManyWithoutUserInput
  invitesReceived: InviteUpdateManyWithoutReceiverInput
  messagesSent: MessageUpdateManyWithoutSenderInput
}

input UserUpdateWithoutMessagesSentDataInput {
  name: String
  email: String
  resetToken: String
  password: String
  keywords: UserUpdatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserUpdatefavouritesInput
  img: String
  sections: SectionUpdateManyWithoutUserInput
  notifications: NotificationUpdateManyWithoutUserInput
  games: GameUpdateManyWithoutUserInput
  conversations: ConversationUpdateManyWithoutParticipantsInput
  jobs: JobUpdateManyWithoutUserInput
  invites: InviteUpdateManyWithoutUserInput
  invitesReceived: InviteUpdateManyWithoutReceiverInput
  messagesReceived: MessageUpdateManyWithoutReceiverInput
}

input UserUpdateWithoutNotificationsDataInput {
  name: String
  email: String
  resetToken: String
  password: String
  keywords: UserUpdatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserUpdatefavouritesInput
  img: String
  sections: SectionUpdateManyWithoutUserInput
  games: GameUpdateManyWithoutUserInput
  conversations: ConversationUpdateManyWithoutParticipantsInput
  jobs: JobUpdateManyWithoutUserInput
  invites: InviteUpdateManyWithoutUserInput
  invitesReceived: InviteUpdateManyWithoutReceiverInput
  messagesSent: MessageUpdateManyWithoutSenderInput
  messagesReceived: MessageUpdateManyWithoutReceiverInput
}

input UserUpdateWithoutSectionsDataInput {
  name: String
  email: String
  resetToken: String
  password: String
  keywords: UserUpdatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  autosave: Boolean
  summary: String
  location: String
  favourites: UserUpdatefavouritesInput
  img: String
  notifications: NotificationUpdateManyWithoutUserInput
  games: GameUpdateManyWithoutUserInput
  conversations: ConversationUpdateManyWithoutParticipantsInput
  jobs: JobUpdateManyWithoutUserInput
  invites: InviteUpdateManyWithoutUserInput
  invitesReceived: InviteUpdateManyWithoutReceiverInput
  messagesSent: MessageUpdateManyWithoutSenderInput
  messagesReceived: MessageUpdateManyWithoutReceiverInput
}

input UserUpdateWithWhereUniqueWithoutConversationsInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutConversationsDataInput!
}

input UserUpsertWithoutGamesInput {
  update: UserUpdateWithoutGamesDataInput!
  create: UserCreateWithoutGamesInput!
}

input UserUpsertWithoutInvitesInput {
  update: UserUpdateWithoutInvitesDataInput!
  create: UserCreateWithoutInvitesInput!
}

input UserUpsertWithoutInvitesReceivedInput {
  update: UserUpdateWithoutInvitesReceivedDataInput!
  create: UserCreateWithoutInvitesReceivedInput!
}

input UserUpsertWithoutJobsInput {
  update: UserUpdateWithoutJobsDataInput!
  create: UserCreateWithoutJobsInput!
}

input UserUpsertWithoutMessagesReceivedInput {
  update: UserUpdateWithoutMessagesReceivedDataInput!
  create: UserCreateWithoutMessagesReceivedInput!
}

input UserUpsertWithoutMessagesSentInput {
  update: UserUpdateWithoutMessagesSentDataInput!
  create: UserCreateWithoutMessagesSentInput!
}

input UserUpsertWithoutNotificationsInput {
  update: UserUpdateWithoutNotificationsDataInput!
  create: UserCreateWithoutNotificationsInput!
}

input UserUpsertWithoutSectionsInput {
  update: UserUpdateWithoutSectionsDataInput!
  create: UserCreateWithoutSectionsInput!
}

input UserUpsertWithWhereUniqueWithoutConversationsInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutConversationsDataInput!
  create: UserCreateWithoutConversationsInput!
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  resetToken: String
  resetToken_not: String
  resetToken_in: [String!]
  resetToken_not_in: [String!]
  resetToken_lt: String
  resetToken_lte: String
  resetToken_gt: String
  resetToken_gte: String
  resetToken_contains: String
  resetToken_not_contains: String
  resetToken_starts_with: String
  resetToken_not_starts_with: String
  resetToken_ends_with: String
  resetToken_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  profileImg: String
  profileImg_not: String
  profileImg_in: [String!]
  profileImg_not_in: [String!]
  profileImg_lt: String
  profileImg_lte: String
  profileImg_gt: String
  profileImg_gte: String
  profileImg_contains: String
  profileImg_not_contains: String
  profileImg_starts_with: String
  profileImg_not_starts_with: String
  profileImg_ends_with: String
  profileImg_not_ends_with: String
  profileImgStyle: String
  profileImgStyle_not: String
  profileImgStyle_in: [String!]
  profileImgStyle_not_in: [String!]
  profileImgStyle_lt: String
  profileImgStyle_lte: String
  profileImgStyle_gt: String
  profileImgStyle_gte: String
  profileImgStyle_contains: String
  profileImgStyle_not_contains: String
  profileImgStyle_starts_with: String
  profileImgStyle_not_starts_with: String
  profileImgStyle_ends_with: String
  profileImgStyle_not_ends_with: String
  profileBG: String
  profileBG_not: String
  profileBG_in: [String!]
  profileBG_not_in: [String!]
  profileBG_lt: String
  profileBG_lte: String
  profileBG_gt: String
  profileBG_gte: String
  profileBG_contains: String
  profileBG_not_contains: String
  profileBG_starts_with: String
  profileBG_not_starts_with: String
  profileBG_ends_with: String
  profileBG_not_ends_with: String
  profileBGStyle: String
  profileBGStyle_not: String
  profileBGStyle_in: [String!]
  profileBGStyle_not_in: [String!]
  profileBGStyle_lt: String
  profileBGStyle_lte: String
  profileBGStyle_gt: String
  profileBGStyle_gte: String
  profileBGStyle_contains: String
  profileBGStyle_not_contains: String
  profileBGStyle_starts_with: String
  profileBGStyle_not_starts_with: String
  profileBGStyle_ends_with: String
  profileBGStyle_not_ends_with: String
  autosave: Boolean
  autosave_not: Boolean
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  img: String
  img_not: String
  img_in: [String!]
  img_not_in: [String!]
  img_lt: String
  img_lte: String
  img_gt: String
  img_gte: String
  img_contains: String
  img_not_contains: String
  img_starts_with: String
  img_not_starts_with: String
  img_ends_with: String
  img_not_ends_with: String
  sections_every: SectionWhereInput
  sections_some: SectionWhereInput
  sections_none: SectionWhereInput
  notifications_every: NotificationWhereInput
  notifications_some: NotificationWhereInput
  notifications_none: NotificationWhereInput
  games_every: GameWhereInput
  games_some: GameWhereInput
  games_none: GameWhereInput
  conversations_every: ConversationWhereInput
  conversations_some: ConversationWhereInput
  conversations_none: ConversationWhereInput
  jobs_every: JobWhereInput
  jobs_some: JobWhereInput
  jobs_none: JobWhereInput
  invites_every: InviteWhereInput
  invites_some: InviteWhereInput
  invites_none: InviteWhereInput
  invitesReceived_every: InviteWhereInput
  invitesReceived_some: InviteWhereInput
  invitesReceived_none: InviteWhereInput
  messagesSent_every: MessageWhereInput
  messagesSent_some: MessageWhereInput
  messagesSent_none: MessageWhereInput
  messagesReceived_every: MessageWhereInput
  messagesReceived_some: MessageWhereInput
  messagesReceived_none: MessageWhereInput
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  email: String
  resetToken: String
}
`
      }
    