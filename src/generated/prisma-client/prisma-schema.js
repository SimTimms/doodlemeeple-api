module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateGallery {
  count: Int!
}

type AggregateGalleryImage {
  count: Int!
}

type AggregateNotableProjects {
  count: Int!
}

type AggregateNotification {
  count: Int!
}

type AggregateSection {
  count: Int!
}

type AggregateTestimonial {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  count: Long!
}

scalar DateTime

type Gallery {
  id: ID!
  summary: String
  section: Section
  images(where: GalleryImageWhereInput, orderBy: GalleryImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GalleryImage!]
}

type GalleryConnection {
  pageInfo: PageInfo!
  edges: [GalleryEdge]!
  aggregate: AggregateGallery!
}

input GalleryCreateInput {
  id: ID
  summary: String
  section: SectionCreateOneWithoutGalleryInput
  images: GalleryImageCreateManyWithoutGalleryInput
}

input GalleryCreateOneWithoutImagesInput {
  create: GalleryCreateWithoutImagesInput
  connect: GalleryWhereUniqueInput
}

input GalleryCreateOneWithoutSectionInput {
  create: GalleryCreateWithoutSectionInput
  connect: GalleryWhereUniqueInput
}

input GalleryCreateWithoutImagesInput {
  id: ID
  summary: String
  section: SectionCreateOneWithoutGalleryInput
}

input GalleryCreateWithoutSectionInput {
  id: ID
  summary: String
  images: GalleryImageCreateManyWithoutGalleryInput
}

type GalleryEdge {
  node: Gallery!
  cursor: String!
}

type GalleryImage {
  id: ID!
  img: String!
  title: String
  gallery: Gallery
}

type GalleryImageConnection {
  pageInfo: PageInfo!
  edges: [GalleryImageEdge]!
  aggregate: AggregateGalleryImage!
}

input GalleryImageCreateInput {
  id: ID
  img: String!
  title: String
  gallery: GalleryCreateOneWithoutImagesInput
}

input GalleryImageCreateManyWithoutGalleryInput {
  create: [GalleryImageCreateWithoutGalleryInput!]
  connect: [GalleryImageWhereUniqueInput!]
}

input GalleryImageCreateWithoutGalleryInput {
  id: ID
  img: String!
  title: String
}

type GalleryImageEdge {
  node: GalleryImage!
  cursor: String!
}

enum GalleryImageOrderByInput {
  id_ASC
  id_DESC
  img_ASC
  img_DESC
  title_ASC
  title_DESC
}

type GalleryImagePreviousValues {
  id: ID!
  img: String!
  title: String
}

input GalleryImageScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  img: String
  img_not: String
  img_in: [String!]
  img_not_in: [String!]
  img_lt: String
  img_lte: String
  img_gt: String
  img_gte: String
  img_contains: String
  img_not_contains: String
  img_starts_with: String
  img_not_starts_with: String
  img_ends_with: String
  img_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  AND: [GalleryImageScalarWhereInput!]
  OR: [GalleryImageScalarWhereInput!]
  NOT: [GalleryImageScalarWhereInput!]
}

type GalleryImageSubscriptionPayload {
  mutation: MutationType!
  node: GalleryImage
  updatedFields: [String!]
  previousValues: GalleryImagePreviousValues
}

input GalleryImageSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: GalleryImageWhereInput
  AND: [GalleryImageSubscriptionWhereInput!]
  OR: [GalleryImageSubscriptionWhereInput!]
  NOT: [GalleryImageSubscriptionWhereInput!]
}

input GalleryImageUpdateInput {
  img: String
  title: String
  gallery: GalleryUpdateOneWithoutImagesInput
}

input GalleryImageUpdateManyDataInput {
  img: String
  title: String
}

input GalleryImageUpdateManyMutationInput {
  img: String
  title: String
}

input GalleryImageUpdateManyWithoutGalleryInput {
  create: [GalleryImageCreateWithoutGalleryInput!]
  delete: [GalleryImageWhereUniqueInput!]
  connect: [GalleryImageWhereUniqueInput!]
  set: [GalleryImageWhereUniqueInput!]
  disconnect: [GalleryImageWhereUniqueInput!]
  update: [GalleryImageUpdateWithWhereUniqueWithoutGalleryInput!]
  upsert: [GalleryImageUpsertWithWhereUniqueWithoutGalleryInput!]
  deleteMany: [GalleryImageScalarWhereInput!]
  updateMany: [GalleryImageUpdateManyWithWhereNestedInput!]
}

input GalleryImageUpdateManyWithWhereNestedInput {
  where: GalleryImageScalarWhereInput!
  data: GalleryImageUpdateManyDataInput!
}

input GalleryImageUpdateWithoutGalleryDataInput {
  img: String
  title: String
}

input GalleryImageUpdateWithWhereUniqueWithoutGalleryInput {
  where: GalleryImageWhereUniqueInput!
  data: GalleryImageUpdateWithoutGalleryDataInput!
}

input GalleryImageUpsertWithWhereUniqueWithoutGalleryInput {
  where: GalleryImageWhereUniqueInput!
  update: GalleryImageUpdateWithoutGalleryDataInput!
  create: GalleryImageCreateWithoutGalleryInput!
}

input GalleryImageWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  img: String
  img_not: String
  img_in: [String!]
  img_not_in: [String!]
  img_lt: String
  img_lte: String
  img_gt: String
  img_gte: String
  img_contains: String
  img_not_contains: String
  img_starts_with: String
  img_not_starts_with: String
  img_ends_with: String
  img_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  gallery: GalleryWhereInput
  AND: [GalleryImageWhereInput!]
  OR: [GalleryImageWhereInput!]
  NOT: [GalleryImageWhereInput!]
}

input GalleryImageWhereUniqueInput {
  id: ID
}

enum GalleryOrderByInput {
  id_ASC
  id_DESC
  summary_ASC
  summary_DESC
}

type GalleryPreviousValues {
  id: ID!
  summary: String
}

type GallerySubscriptionPayload {
  mutation: MutationType!
  node: Gallery
  updatedFields: [String!]
  previousValues: GalleryPreviousValues
}

input GallerySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: GalleryWhereInput
  AND: [GallerySubscriptionWhereInput!]
  OR: [GallerySubscriptionWhereInput!]
  NOT: [GallerySubscriptionWhereInput!]
}

input GalleryUpdateInput {
  summary: String
  section: SectionUpdateOneWithoutGalleryInput
  images: GalleryImageUpdateManyWithoutGalleryInput
}

input GalleryUpdateManyMutationInput {
  summary: String
}

input GalleryUpdateOneWithoutImagesInput {
  create: GalleryCreateWithoutImagesInput
  update: GalleryUpdateWithoutImagesDataInput
  upsert: GalleryUpsertWithoutImagesInput
  delete: Boolean
  disconnect: Boolean
  connect: GalleryWhereUniqueInput
}

input GalleryUpdateOneWithoutSectionInput {
  create: GalleryCreateWithoutSectionInput
  update: GalleryUpdateWithoutSectionDataInput
  upsert: GalleryUpsertWithoutSectionInput
  delete: Boolean
  disconnect: Boolean
  connect: GalleryWhereUniqueInput
}

input GalleryUpdateWithoutImagesDataInput {
  summary: String
  section: SectionUpdateOneWithoutGalleryInput
}

input GalleryUpdateWithoutSectionDataInput {
  summary: String
  images: GalleryImageUpdateManyWithoutGalleryInput
}

input GalleryUpsertWithoutImagesInput {
  update: GalleryUpdateWithoutImagesDataInput!
  create: GalleryCreateWithoutImagesInput!
}

input GalleryUpsertWithoutSectionInput {
  update: GalleryUpdateWithoutSectionDataInput!
  create: GalleryCreateWithoutSectionInput!
}

input GalleryWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  section: SectionWhereInput
  images_every: GalleryImageWhereInput
  images_some: GalleryImageWhereInput
  images_none: GalleryImageWhereInput
  AND: [GalleryWhereInput!]
  OR: [GalleryWhereInput!]
  NOT: [GalleryWhereInput!]
}

input GalleryWhereUniqueInput {
  id: ID
}

scalar Long

type Mutation {
  createGallery(data: GalleryCreateInput!): Gallery!
  updateGallery(data: GalleryUpdateInput!, where: GalleryWhereUniqueInput!): Gallery
  updateManyGalleries(data: GalleryUpdateManyMutationInput!, where: GalleryWhereInput): BatchPayload!
  upsertGallery(where: GalleryWhereUniqueInput!, create: GalleryCreateInput!, update: GalleryUpdateInput!): Gallery!
  deleteGallery(where: GalleryWhereUniqueInput!): Gallery
  deleteManyGalleries(where: GalleryWhereInput): BatchPayload!
  createGalleryImage(data: GalleryImageCreateInput!): GalleryImage!
  updateGalleryImage(data: GalleryImageUpdateInput!, where: GalleryImageWhereUniqueInput!): GalleryImage
  updateManyGalleryImages(data: GalleryImageUpdateManyMutationInput!, where: GalleryImageWhereInput): BatchPayload!
  upsertGalleryImage(where: GalleryImageWhereUniqueInput!, create: GalleryImageCreateInput!, update: GalleryImageUpdateInput!): GalleryImage!
  deleteGalleryImage(where: GalleryImageWhereUniqueInput!): GalleryImage
  deleteManyGalleryImages(where: GalleryImageWhereInput): BatchPayload!
  createNotableProjects(data: NotableProjectsCreateInput!): NotableProjects!
  updateNotableProjects(data: NotableProjectsUpdateInput!, where: NotableProjectsWhereUniqueInput!): NotableProjects
  updateManyNotableProjectses(data: NotableProjectsUpdateManyMutationInput!, where: NotableProjectsWhereInput): BatchPayload!
  upsertNotableProjects(where: NotableProjectsWhereUniqueInput!, create: NotableProjectsCreateInput!, update: NotableProjectsUpdateInput!): NotableProjects!
  deleteNotableProjects(where: NotableProjectsWhereUniqueInput!): NotableProjects
  deleteManyNotableProjectses(where: NotableProjectsWhereInput): BatchPayload!
  createNotification(data: NotificationCreateInput!): Notification!
  updateNotification(data: NotificationUpdateInput!, where: NotificationWhereUniqueInput!): Notification
  updateManyNotifications(data: NotificationUpdateManyMutationInput!, where: NotificationWhereInput): BatchPayload!
  upsertNotification(where: NotificationWhereUniqueInput!, create: NotificationCreateInput!, update: NotificationUpdateInput!): Notification!
  deleteNotification(where: NotificationWhereUniqueInput!): Notification
  deleteManyNotifications(where: NotificationWhereInput): BatchPayload!
  createSection(data: SectionCreateInput!): Section!
  updateSection(data: SectionUpdateInput!, where: SectionWhereUniqueInput!): Section
  updateManySections(data: SectionUpdateManyMutationInput!, where: SectionWhereInput): BatchPayload!
  upsertSection(where: SectionWhereUniqueInput!, create: SectionCreateInput!, update: SectionUpdateInput!): Section!
  deleteSection(where: SectionWhereUniqueInput!): Section
  deleteManySections(where: SectionWhereInput): BatchPayload!
  createTestimonial(data: TestimonialCreateInput!): Testimonial!
  updateTestimonial(data: TestimonialUpdateInput!, where: TestimonialWhereUniqueInput!): Testimonial
  updateManyTestimonials(data: TestimonialUpdateManyMutationInput!, where: TestimonialWhereInput): BatchPayload!
  upsertTestimonial(where: TestimonialWhereUniqueInput!, create: TestimonialCreateInput!, update: TestimonialUpdateInput!): Testimonial!
  deleteTestimonial(where: TestimonialWhereUniqueInput!): Testimonial
  deleteManyTestimonials(where: TestimonialWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type NotableProjects {
  id: ID!
  summary: String!
}

type NotableProjectsConnection {
  pageInfo: PageInfo!
  edges: [NotableProjectsEdge]!
  aggregate: AggregateNotableProjects!
}

input NotableProjectsCreateInput {
  id: ID
  summary: String!
}

input NotableProjectsCreateManyInput {
  create: [NotableProjectsCreateInput!]
  connect: [NotableProjectsWhereUniqueInput!]
}

type NotableProjectsEdge {
  node: NotableProjects!
  cursor: String!
}

enum NotableProjectsOrderByInput {
  id_ASC
  id_DESC
  summary_ASC
  summary_DESC
}

type NotableProjectsPreviousValues {
  id: ID!
  summary: String!
}

input NotableProjectsScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  AND: [NotableProjectsScalarWhereInput!]
  OR: [NotableProjectsScalarWhereInput!]
  NOT: [NotableProjectsScalarWhereInput!]
}

type NotableProjectsSubscriptionPayload {
  mutation: MutationType!
  node: NotableProjects
  updatedFields: [String!]
  previousValues: NotableProjectsPreviousValues
}

input NotableProjectsSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: NotableProjectsWhereInput
  AND: [NotableProjectsSubscriptionWhereInput!]
  OR: [NotableProjectsSubscriptionWhereInput!]
  NOT: [NotableProjectsSubscriptionWhereInput!]
}

input NotableProjectsUpdateDataInput {
  summary: String
}

input NotableProjectsUpdateInput {
  summary: String
}

input NotableProjectsUpdateManyDataInput {
  summary: String
}

input NotableProjectsUpdateManyInput {
  create: [NotableProjectsCreateInput!]
  update: [NotableProjectsUpdateWithWhereUniqueNestedInput!]
  upsert: [NotableProjectsUpsertWithWhereUniqueNestedInput!]
  delete: [NotableProjectsWhereUniqueInput!]
  connect: [NotableProjectsWhereUniqueInput!]
  set: [NotableProjectsWhereUniqueInput!]
  disconnect: [NotableProjectsWhereUniqueInput!]
  deleteMany: [NotableProjectsScalarWhereInput!]
  updateMany: [NotableProjectsUpdateManyWithWhereNestedInput!]
}

input NotableProjectsUpdateManyMutationInput {
  summary: String
}

input NotableProjectsUpdateManyWithWhereNestedInput {
  where: NotableProjectsScalarWhereInput!
  data: NotableProjectsUpdateManyDataInput!
}

input NotableProjectsUpdateWithWhereUniqueNestedInput {
  where: NotableProjectsWhereUniqueInput!
  data: NotableProjectsUpdateDataInput!
}

input NotableProjectsUpsertWithWhereUniqueNestedInput {
  where: NotableProjectsWhereUniqueInput!
  update: NotableProjectsUpdateDataInput!
  create: NotableProjectsCreateInput!
}

input NotableProjectsWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  AND: [NotableProjectsWhereInput!]
  OR: [NotableProjectsWhereInput!]
  NOT: [NotableProjectsWhereInput!]
}

input NotableProjectsWhereUniqueInput {
  id: ID
}

type Notification {
  id: ID!
  title: String!
  message: String!
  discarded: Boolean
  linkTo: String
  icon: String!
  createdAt: DateTime!
  user: User!
}

type NotificationConnection {
  pageInfo: PageInfo!
  edges: [NotificationEdge]!
  aggregate: AggregateNotification!
}

input NotificationCreateInput {
  id: ID
  title: String!
  message: String!
  discarded: Boolean
  linkTo: String
  icon: String!
  user: UserCreateOneWithoutNotificationsInput!
}

input NotificationCreateManyWithoutUserInput {
  create: [NotificationCreateWithoutUserInput!]
  connect: [NotificationWhereUniqueInput!]
}

input NotificationCreateWithoutUserInput {
  id: ID
  title: String!
  message: String!
  discarded: Boolean
  linkTo: String
  icon: String!
}

type NotificationEdge {
  node: Notification!
  cursor: String!
}

enum NotificationOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  message_ASC
  message_DESC
  discarded_ASC
  discarded_DESC
  linkTo_ASC
  linkTo_DESC
  icon_ASC
  icon_DESC
  createdAt_ASC
  createdAt_DESC
}

type NotificationPreviousValues {
  id: ID!
  title: String!
  message: String!
  discarded: Boolean
  linkTo: String
  icon: String!
  createdAt: DateTime!
}

input NotificationScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  message: String
  message_not: String
  message_in: [String!]
  message_not_in: [String!]
  message_lt: String
  message_lte: String
  message_gt: String
  message_gte: String
  message_contains: String
  message_not_contains: String
  message_starts_with: String
  message_not_starts_with: String
  message_ends_with: String
  message_not_ends_with: String
  discarded: Boolean
  discarded_not: Boolean
  linkTo: String
  linkTo_not: String
  linkTo_in: [String!]
  linkTo_not_in: [String!]
  linkTo_lt: String
  linkTo_lte: String
  linkTo_gt: String
  linkTo_gte: String
  linkTo_contains: String
  linkTo_not_contains: String
  linkTo_starts_with: String
  linkTo_not_starts_with: String
  linkTo_ends_with: String
  linkTo_not_ends_with: String
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [NotificationScalarWhereInput!]
  OR: [NotificationScalarWhereInput!]
  NOT: [NotificationScalarWhereInput!]
}

type NotificationSubscriptionPayload {
  mutation: MutationType!
  node: Notification
  updatedFields: [String!]
  previousValues: NotificationPreviousValues
}

input NotificationSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: NotificationWhereInput
  AND: [NotificationSubscriptionWhereInput!]
  OR: [NotificationSubscriptionWhereInput!]
  NOT: [NotificationSubscriptionWhereInput!]
}

input NotificationUpdateInput {
  title: String
  message: String
  discarded: Boolean
  linkTo: String
  icon: String
  user: UserUpdateOneRequiredWithoutNotificationsInput
}

input NotificationUpdateManyDataInput {
  title: String
  message: String
  discarded: Boolean
  linkTo: String
  icon: String
}

input NotificationUpdateManyMutationInput {
  title: String
  message: String
  discarded: Boolean
  linkTo: String
  icon: String
}

input NotificationUpdateManyWithoutUserInput {
  create: [NotificationCreateWithoutUserInput!]
  delete: [NotificationWhereUniqueInput!]
  connect: [NotificationWhereUniqueInput!]
  set: [NotificationWhereUniqueInput!]
  disconnect: [NotificationWhereUniqueInput!]
  update: [NotificationUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [NotificationUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [NotificationScalarWhereInput!]
  updateMany: [NotificationUpdateManyWithWhereNestedInput!]
}

input NotificationUpdateManyWithWhereNestedInput {
  where: NotificationScalarWhereInput!
  data: NotificationUpdateManyDataInput!
}

input NotificationUpdateWithoutUserDataInput {
  title: String
  message: String
  discarded: Boolean
  linkTo: String
  icon: String
}

input NotificationUpdateWithWhereUniqueWithoutUserInput {
  where: NotificationWhereUniqueInput!
  data: NotificationUpdateWithoutUserDataInput!
}

input NotificationUpsertWithWhereUniqueWithoutUserInput {
  where: NotificationWhereUniqueInput!
  update: NotificationUpdateWithoutUserDataInput!
  create: NotificationCreateWithoutUserInput!
}

input NotificationWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  message: String
  message_not: String
  message_in: [String!]
  message_not_in: [String!]
  message_lt: String
  message_lte: String
  message_gt: String
  message_gte: String
  message_contains: String
  message_not_contains: String
  message_starts_with: String
  message_not_starts_with: String
  message_ends_with: String
  message_not_ends_with: String
  discarded: Boolean
  discarded_not: Boolean
  linkTo: String
  linkTo_not: String
  linkTo_in: [String!]
  linkTo_not_in: [String!]
  linkTo_lt: String
  linkTo_lte: String
  linkTo_gt: String
  linkTo_gte: String
  linkTo_contains: String
  linkTo_not_contains: String
  linkTo_starts_with: String
  linkTo_not_starts_with: String
  linkTo_ends_with: String
  linkTo_not_ends_with: String
  icon: String
  icon_not: String
  icon_in: [String!]
  icon_not_in: [String!]
  icon_lt: String
  icon_lte: String
  icon_gt: String
  icon_gte: String
  icon_contains: String
  icon_not_contains: String
  icon_starts_with: String
  icon_not_starts_with: String
  icon_ends_with: String
  icon_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  user: UserWhereInput
  AND: [NotificationWhereInput!]
  OR: [NotificationWhereInput!]
  NOT: [NotificationWhereInput!]
}

input NotificationWhereUniqueInput {
  id: ID
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  gallery(where: GalleryWhereUniqueInput!): Gallery
  galleries(where: GalleryWhereInput, orderBy: GalleryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Gallery]!
  galleriesConnection(where: GalleryWhereInput, orderBy: GalleryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GalleryConnection!
  galleryImage(where: GalleryImageWhereUniqueInput!): GalleryImage
  galleryImages(where: GalleryImageWhereInput, orderBy: GalleryImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GalleryImage]!
  galleryImagesConnection(where: GalleryImageWhereInput, orderBy: GalleryImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GalleryImageConnection!
  notableProjects(where: NotableProjectsWhereUniqueInput!): NotableProjects
  notableProjectses(where: NotableProjectsWhereInput, orderBy: NotableProjectsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [NotableProjects]!
  notableProjectsesConnection(where: NotableProjectsWhereInput, orderBy: NotableProjectsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): NotableProjectsConnection!
  notification(where: NotificationWhereUniqueInput!): Notification
  notifications(where: NotificationWhereInput, orderBy: NotificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Notification]!
  notificationsConnection(where: NotificationWhereInput, orderBy: NotificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): NotificationConnection!
  section(where: SectionWhereUniqueInput!): Section
  sections(where: SectionWhereInput, orderBy: SectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Section]!
  sectionsConnection(where: SectionWhereInput, orderBy: SectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SectionConnection!
  testimonial(where: TestimonialWhereUniqueInput!): Testimonial
  testimonials(where: TestimonialWhereInput, orderBy: TestimonialOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Testimonial]!
  testimonialsConnection(where: TestimonialWhereInput, orderBy: TestimonialOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TestimonialConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  node(id: ID!): Node
}

type Section {
  id: ID!
  title: String
  summary: String
  gallery: Gallery
  notableProjects(where: NotableProjectsWhereInput, orderBy: NotableProjectsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [NotableProjects!]
  testimonials(where: TestimonialWhereInput, orderBy: TestimonialOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Testimonial!]
  user: User!
  showreel: String
}

type SectionConnection {
  pageInfo: PageInfo!
  edges: [SectionEdge]!
  aggregate: AggregateSection!
}

input SectionCreateInput {
  id: ID
  title: String
  summary: String
  gallery: GalleryCreateOneWithoutSectionInput
  notableProjects: NotableProjectsCreateManyInput
  testimonials: TestimonialCreateManyInput
  user: UserCreateOneWithoutSectionsInput!
  showreel: String
}

input SectionCreateManyWithoutUserInput {
  create: [SectionCreateWithoutUserInput!]
  connect: [SectionWhereUniqueInput!]
}

input SectionCreateOneWithoutGalleryInput {
  create: SectionCreateWithoutGalleryInput
  connect: SectionWhereUniqueInput
}

input SectionCreateWithoutGalleryInput {
  id: ID
  title: String
  summary: String
  notableProjects: NotableProjectsCreateManyInput
  testimonials: TestimonialCreateManyInput
  user: UserCreateOneWithoutSectionsInput!
  showreel: String
}

input SectionCreateWithoutUserInput {
  id: ID
  title: String
  summary: String
  gallery: GalleryCreateOneWithoutSectionInput
  notableProjects: NotableProjectsCreateManyInput
  testimonials: TestimonialCreateManyInput
  showreel: String
}

type SectionEdge {
  node: Section!
  cursor: String!
}

enum SectionOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  summary_ASC
  summary_DESC
  showreel_ASC
  showreel_DESC
}

type SectionPreviousValues {
  id: ID!
  title: String
  summary: String
  showreel: String
}

input SectionScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  showreel: String
  showreel_not: String
  showreel_in: [String!]
  showreel_not_in: [String!]
  showreel_lt: String
  showreel_lte: String
  showreel_gt: String
  showreel_gte: String
  showreel_contains: String
  showreel_not_contains: String
  showreel_starts_with: String
  showreel_not_starts_with: String
  showreel_ends_with: String
  showreel_not_ends_with: String
  AND: [SectionScalarWhereInput!]
  OR: [SectionScalarWhereInput!]
  NOT: [SectionScalarWhereInput!]
}

type SectionSubscriptionPayload {
  mutation: MutationType!
  node: Section
  updatedFields: [String!]
  previousValues: SectionPreviousValues
}

input SectionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SectionWhereInput
  AND: [SectionSubscriptionWhereInput!]
  OR: [SectionSubscriptionWhereInput!]
  NOT: [SectionSubscriptionWhereInput!]
}

input SectionUpdateInput {
  title: String
  summary: String
  gallery: GalleryUpdateOneWithoutSectionInput
  notableProjects: NotableProjectsUpdateManyInput
  testimonials: TestimonialUpdateManyInput
  user: UserUpdateOneRequiredWithoutSectionsInput
  showreel: String
}

input SectionUpdateManyDataInput {
  title: String
  summary: String
  showreel: String
}

input SectionUpdateManyMutationInput {
  title: String
  summary: String
  showreel: String
}

input SectionUpdateManyWithoutUserInput {
  create: [SectionCreateWithoutUserInput!]
  delete: [SectionWhereUniqueInput!]
  connect: [SectionWhereUniqueInput!]
  set: [SectionWhereUniqueInput!]
  disconnect: [SectionWhereUniqueInput!]
  update: [SectionUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [SectionUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [SectionScalarWhereInput!]
  updateMany: [SectionUpdateManyWithWhereNestedInput!]
}

input SectionUpdateManyWithWhereNestedInput {
  where: SectionScalarWhereInput!
  data: SectionUpdateManyDataInput!
}

input SectionUpdateOneWithoutGalleryInput {
  create: SectionCreateWithoutGalleryInput
  update: SectionUpdateWithoutGalleryDataInput
  upsert: SectionUpsertWithoutGalleryInput
  delete: Boolean
  disconnect: Boolean
  connect: SectionWhereUniqueInput
}

input SectionUpdateWithoutGalleryDataInput {
  title: String
  summary: String
  notableProjects: NotableProjectsUpdateManyInput
  testimonials: TestimonialUpdateManyInput
  user: UserUpdateOneRequiredWithoutSectionsInput
  showreel: String
}

input SectionUpdateWithoutUserDataInput {
  title: String
  summary: String
  gallery: GalleryUpdateOneWithoutSectionInput
  notableProjects: NotableProjectsUpdateManyInput
  testimonials: TestimonialUpdateManyInput
  showreel: String
}

input SectionUpdateWithWhereUniqueWithoutUserInput {
  where: SectionWhereUniqueInput!
  data: SectionUpdateWithoutUserDataInput!
}

input SectionUpsertWithoutGalleryInput {
  update: SectionUpdateWithoutGalleryDataInput!
  create: SectionCreateWithoutGalleryInput!
}

input SectionUpsertWithWhereUniqueWithoutUserInput {
  where: SectionWhereUniqueInput!
  update: SectionUpdateWithoutUserDataInput!
  create: SectionCreateWithoutUserInput!
}

input SectionWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  gallery: GalleryWhereInput
  notableProjects_every: NotableProjectsWhereInput
  notableProjects_some: NotableProjectsWhereInput
  notableProjects_none: NotableProjectsWhereInput
  testimonials_every: TestimonialWhereInput
  testimonials_some: TestimonialWhereInput
  testimonials_none: TestimonialWhereInput
  user: UserWhereInput
  showreel: String
  showreel_not: String
  showreel_in: [String!]
  showreel_not_in: [String!]
  showreel_lt: String
  showreel_lte: String
  showreel_gt: String
  showreel_gte: String
  showreel_contains: String
  showreel_not_contains: String
  showreel_starts_with: String
  showreel_not_starts_with: String
  showreel_ends_with: String
  showreel_not_ends_with: String
  AND: [SectionWhereInput!]
  OR: [SectionWhereInput!]
  NOT: [SectionWhereInput!]
}

input SectionWhereUniqueInput {
  id: ID
}

type Subscription {
  gallery(where: GallerySubscriptionWhereInput): GallerySubscriptionPayload
  galleryImage(where: GalleryImageSubscriptionWhereInput): GalleryImageSubscriptionPayload
  notableProjects(where: NotableProjectsSubscriptionWhereInput): NotableProjectsSubscriptionPayload
  notification(where: NotificationSubscriptionWhereInput): NotificationSubscriptionPayload
  section(where: SectionSubscriptionWhereInput): SectionSubscriptionPayload
  testimonial(where: TestimonialSubscriptionWhereInput): TestimonialSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type Testimonial {
  id: ID!
  summary: String!
  image: String
  name: String
  status: Boolean
}

type TestimonialConnection {
  pageInfo: PageInfo!
  edges: [TestimonialEdge]!
  aggregate: AggregateTestimonial!
}

input TestimonialCreateInput {
  id: ID
  summary: String!
  image: String
  name: String
  status: Boolean
}

input TestimonialCreateManyInput {
  create: [TestimonialCreateInput!]
  connect: [TestimonialWhereUniqueInput!]
}

type TestimonialEdge {
  node: Testimonial!
  cursor: String!
}

enum TestimonialOrderByInput {
  id_ASC
  id_DESC
  summary_ASC
  summary_DESC
  image_ASC
  image_DESC
  name_ASC
  name_DESC
  status_ASC
  status_DESC
}

type TestimonialPreviousValues {
  id: ID!
  summary: String!
  image: String
  name: String
  status: Boolean
}

input TestimonialScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  status: Boolean
  status_not: Boolean
  AND: [TestimonialScalarWhereInput!]
  OR: [TestimonialScalarWhereInput!]
  NOT: [TestimonialScalarWhereInput!]
}

type TestimonialSubscriptionPayload {
  mutation: MutationType!
  node: Testimonial
  updatedFields: [String!]
  previousValues: TestimonialPreviousValues
}

input TestimonialSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TestimonialWhereInput
  AND: [TestimonialSubscriptionWhereInput!]
  OR: [TestimonialSubscriptionWhereInput!]
  NOT: [TestimonialSubscriptionWhereInput!]
}

input TestimonialUpdateDataInput {
  summary: String
  image: String
  name: String
  status: Boolean
}

input TestimonialUpdateInput {
  summary: String
  image: String
  name: String
  status: Boolean
}

input TestimonialUpdateManyDataInput {
  summary: String
  image: String
  name: String
  status: Boolean
}

input TestimonialUpdateManyInput {
  create: [TestimonialCreateInput!]
  update: [TestimonialUpdateWithWhereUniqueNestedInput!]
  upsert: [TestimonialUpsertWithWhereUniqueNestedInput!]
  delete: [TestimonialWhereUniqueInput!]
  connect: [TestimonialWhereUniqueInput!]
  set: [TestimonialWhereUniqueInput!]
  disconnect: [TestimonialWhereUniqueInput!]
  deleteMany: [TestimonialScalarWhereInput!]
  updateMany: [TestimonialUpdateManyWithWhereNestedInput!]
}

input TestimonialUpdateManyMutationInput {
  summary: String
  image: String
  name: String
  status: Boolean
}

input TestimonialUpdateManyWithWhereNestedInput {
  where: TestimonialScalarWhereInput!
  data: TestimonialUpdateManyDataInput!
}

input TestimonialUpdateWithWhereUniqueNestedInput {
  where: TestimonialWhereUniqueInput!
  data: TestimonialUpdateDataInput!
}

input TestimonialUpsertWithWhereUniqueNestedInput {
  where: TestimonialWhereUniqueInput!
  update: TestimonialUpdateDataInput!
  create: TestimonialCreateInput!
}

input TestimonialWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  status: Boolean
  status_not: Boolean
  AND: [TestimonialWhereInput!]
  OR: [TestimonialWhereInput!]
  NOT: [TestimonialWhereInput!]
}

input TestimonialWhereUniqueInput {
  id: ID
}

type User {
  id: ID!
  name: String!
  email: String!
  resetToken: String
  password: String!
  keywords: [String!]!
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  summary: String
  location: String
  sections(where: SectionWhereInput, orderBy: SectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Section!]
  notifications(where: NotificationWhereInput, orderBy: NotificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Notification!]
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  name: String!
  email: String!
  resetToken: String
  password: String!
  keywords: UserCreatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  summary: String
  location: String
  sections: SectionCreateManyWithoutUserInput
  notifications: NotificationCreateManyWithoutUserInput
}

input UserCreatekeywordsInput {
  set: [String!]
}

input UserCreateOneWithoutNotificationsInput {
  create: UserCreateWithoutNotificationsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutSectionsInput {
  create: UserCreateWithoutSectionsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutNotificationsInput {
  id: ID
  name: String!
  email: String!
  resetToken: String
  password: String!
  keywords: UserCreatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  summary: String
  location: String
  sections: SectionCreateManyWithoutUserInput
}

input UserCreateWithoutSectionsInput {
  id: ID
  name: String!
  email: String!
  resetToken: String
  password: String!
  keywords: UserCreatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  summary: String
  location: String
  notifications: NotificationCreateManyWithoutUserInput
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  resetToken_ASC
  resetToken_DESC
  password_ASC
  password_DESC
  profileImg_ASC
  profileImg_DESC
  profileImgStyle_ASC
  profileImgStyle_DESC
  profileBG_ASC
  profileBG_DESC
  profileBGStyle_ASC
  profileBGStyle_DESC
  summary_ASC
  summary_DESC
  location_ASC
  location_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  resetToken: String
  password: String!
  keywords: [String!]!
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  summary: String
  location: String
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateInput {
  name: String
  email: String
  resetToken: String
  password: String
  keywords: UserUpdatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  summary: String
  location: String
  sections: SectionUpdateManyWithoutUserInput
  notifications: NotificationUpdateManyWithoutUserInput
}

input UserUpdatekeywordsInput {
  set: [String!]
}

input UserUpdateManyMutationInput {
  name: String
  email: String
  resetToken: String
  password: String
  keywords: UserUpdatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  summary: String
  location: String
}

input UserUpdateOneRequiredWithoutNotificationsInput {
  create: UserCreateWithoutNotificationsInput
  update: UserUpdateWithoutNotificationsDataInput
  upsert: UserUpsertWithoutNotificationsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutSectionsInput {
  create: UserCreateWithoutSectionsInput
  update: UserUpdateWithoutSectionsDataInput
  upsert: UserUpsertWithoutSectionsInput
  connect: UserWhereUniqueInput
}

input UserUpdateWithoutNotificationsDataInput {
  name: String
  email: String
  resetToken: String
  password: String
  keywords: UserUpdatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  summary: String
  location: String
  sections: SectionUpdateManyWithoutUserInput
}

input UserUpdateWithoutSectionsDataInput {
  name: String
  email: String
  resetToken: String
  password: String
  keywords: UserUpdatekeywordsInput
  profileImg: String
  profileImgStyle: String
  profileBG: String
  profileBGStyle: String
  summary: String
  location: String
  notifications: NotificationUpdateManyWithoutUserInput
}

input UserUpsertWithoutNotificationsInput {
  update: UserUpdateWithoutNotificationsDataInput!
  create: UserCreateWithoutNotificationsInput!
}

input UserUpsertWithoutSectionsInput {
  update: UserUpdateWithoutSectionsDataInput!
  create: UserCreateWithoutSectionsInput!
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  resetToken: String
  resetToken_not: String
  resetToken_in: [String!]
  resetToken_not_in: [String!]
  resetToken_lt: String
  resetToken_lte: String
  resetToken_gt: String
  resetToken_gte: String
  resetToken_contains: String
  resetToken_not_contains: String
  resetToken_starts_with: String
  resetToken_not_starts_with: String
  resetToken_ends_with: String
  resetToken_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  profileImg: String
  profileImg_not: String
  profileImg_in: [String!]
  profileImg_not_in: [String!]
  profileImg_lt: String
  profileImg_lte: String
  profileImg_gt: String
  profileImg_gte: String
  profileImg_contains: String
  profileImg_not_contains: String
  profileImg_starts_with: String
  profileImg_not_starts_with: String
  profileImg_ends_with: String
  profileImg_not_ends_with: String
  profileImgStyle: String
  profileImgStyle_not: String
  profileImgStyle_in: [String!]
  profileImgStyle_not_in: [String!]
  profileImgStyle_lt: String
  profileImgStyle_lte: String
  profileImgStyle_gt: String
  profileImgStyle_gte: String
  profileImgStyle_contains: String
  profileImgStyle_not_contains: String
  profileImgStyle_starts_with: String
  profileImgStyle_not_starts_with: String
  profileImgStyle_ends_with: String
  profileImgStyle_not_ends_with: String
  profileBG: String
  profileBG_not: String
  profileBG_in: [String!]
  profileBG_not_in: [String!]
  profileBG_lt: String
  profileBG_lte: String
  profileBG_gt: String
  profileBG_gte: String
  profileBG_contains: String
  profileBG_not_contains: String
  profileBG_starts_with: String
  profileBG_not_starts_with: String
  profileBG_ends_with: String
  profileBG_not_ends_with: String
  profileBGStyle: String
  profileBGStyle_not: String
  profileBGStyle_in: [String!]
  profileBGStyle_not_in: [String!]
  profileBGStyle_lt: String
  profileBGStyle_lte: String
  profileBGStyle_gt: String
  profileBGStyle_gte: String
  profileBGStyle_contains: String
  profileBGStyle_not_contains: String
  profileBGStyle_starts_with: String
  profileBGStyle_not_starts_with: String
  profileBGStyle_ends_with: String
  profileBGStyle_not_ends_with: String
  summary: String
  summary_not: String
  summary_in: [String!]
  summary_not_in: [String!]
  summary_lt: String
  summary_lte: String
  summary_gt: String
  summary_gte: String
  summary_contains: String
  summary_not_contains: String
  summary_starts_with: String
  summary_not_starts_with: String
  summary_ends_with: String
  summary_not_ends_with: String
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  sections_every: SectionWhereInput
  sections_some: SectionWhereInput
  sections_none: SectionWhereInput
  notifications_every: NotificationWhereInput
  notifications_some: NotificationWhereInput
  notifications_none: NotificationWhereInput
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  email: String
  resetToken: String
}
`
      }
    